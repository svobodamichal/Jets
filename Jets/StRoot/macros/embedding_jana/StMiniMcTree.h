//////////////////////////////////////////////////////////
// This class has been automatically generated on
// Mon Jul 19 06:10:24 2010 by ROOT version 5.22/00a
// from TTree StMiniMcTree/StMiniMcTree
// found on file: /eliza15/star/starprod/embedding/2007ProductionMinBias/D0_220_1234306453/P08ic.SL08f/2007/125/st_physics_8125012_raw_1010004.minimc.root
//////////////////////////////////////////////////////////

#ifndef StMiniMcTree_h
#define StMiniMcTree_h

#include <TROOT.h>
#include <TChain.h>
#include <TSystem.h>
#include <TFile.h>
#include "Riostream.h"
   const Int_t kMaxmMcTracks = 100000;
   const Int_t kMaxmMatchedPairs = 100000;
   const Int_t kMaxmMergedPairs = 1;
   const Int_t kMaxmSplitPairs = 1;
   const Int_t kMaxmGhostPairs = 1;
   const Int_t kMaxmContamPairs = 1;
   const Int_t kMaxmMatGlobPairs = 100000;

class StMiniMcTree {
public :
   TTree          *fChain;   //!pointer to the analyzed TTree or TChain
   Int_t           fCurrent; //!current Tree number in a TChain

   // Declaration of leaf types
   Int_t           mEventId;
   Int_t           mRunId;
   Int_t           mOriginMult;
   Int_t           mCentralMult;
   Int_t           mCentrality;
   Int_t           mNUncorrectedNegativePrimaries;
   Int_t           mNUncorrectedPrimaries;
   Int_t           mNFtpcWUncorrectedPrimaries;
   Int_t           mNFtpcEUncorrectedPrimaries;
   Int_t           mMcMult;
   Int_t           mNMcNch;
   Int_t           mNMcFtpcWNch;
   Int_t           mNMcFtpcENch;
   Int_t           mNMcHminus;
   Int_t           mNMcGlobal;
   Int_t           mNMcGoodGlobal20;
   Int_t           mNRcGlobal;
   Int_t           mNRcGoodGlobal20;
   Float_t         mVertexX;
   Float_t         mVertexY;
   Float_t         mVertexZ;
   Float_t         mVertexCovMatrix[6];
   Float_t         mMcVertexX;
   Float_t         mMcVertexY;
   Float_t         mMcVertexZ;
   Float_t         mMagField;
   Float_t         mCenterOfMassEnergy;
   Float_t         mBackgroundRate;
   Short_t         mBeamMassNumberEast;
   Short_t         mBeamMassNumberWest;
   Float_t         mCtb;
   Float_t         mZdcE;
   Float_t         mZdcW;
   Int_t           mNMcTrack;
   Int_t           mNMatchedPair;
   Int_t           mNMergedPair;
   Int_t           mNSplitPair;
   Int_t           mNGhostPair;
   Int_t           mNContamPair;
   Int_t           mNMatGlobPair;
   Int_t           mMcTracks_;
   Char_t          mMcTracks_mIsValid[kMaxmMcTracks];   //[mMcTracks_]
   Float_t         mMcTracks_mPtMc[kMaxmMcTracks];   //[mMcTracks_]
   Float_t         mMcTracks_mPzMc[kMaxmMcTracks];   //[mMcTracks_]
   Float_t         mMcTracks_mEtaMc[kMaxmMcTracks];   //[mMcTracks_]
   Float_t         mMcTracks_mPhiMc[kMaxmMcTracks];   //[mMcTracks_]
   Short_t         mMcTracks_mNHitMc[kMaxmMcTracks];   //[mMcTracks_]
   Short_t         mMcTracks_mNSvtHitMc[kMaxmMcTracks];   //[mMcTracks_]
   Short_t         mMcTracks_mNSsdHitMc[kMaxmMcTracks];   //[mMcTracks_]
   Short_t         mMcTracks_mNFtpcHitMc[kMaxmMcTracks];   //[mMcTracks_]
   Short_t         mMcTracks_mNBemcHitMc[kMaxmMcTracks];   //[mMcTracks_]
   Short_t         mMcTracks_mNBprsHitMc[kMaxmMcTracks];   //[mMcTracks_]
   Short_t         mMcTracks_mNBsmdeHitMc[kMaxmMcTracks];   //[mMcTracks_]
   Short_t         mMcTracks_mNBsmdpHitMc[kMaxmMcTracks];   //[mMcTracks_]
   Short_t         mMcTracks_mNEemcHitMc[kMaxmMcTracks];   //[mMcTracks_]
   Short_t         mMcTracks_mNEprsHitMc[kMaxmMcTracks];   //[mMcTracks_]
   Short_t         mMcTracks_mNEsmduHitMc[kMaxmMcTracks];   //[mMcTracks_]
   Short_t         mMcTracks_mNEsmdvHitMc[kMaxmMcTracks];   //[mMcTracks_]
   Short_t         mMcTracks_mGeantId[kMaxmMcTracks];   //[mMcTracks_]
   Short_t         mMcTracks_mChargeMc[kMaxmMcTracks];   //[mMcTracks_]
   Float_t         mMcTracks_mStopR[kMaxmMcTracks];   //[mMcTracks_]
   Short_t         mMcTracks_mKey[kMaxmMcTracks];   //[mMcTracks_]
   Short_t         mMcTracks_mParentKey[kMaxmMcTracks];   //[mMcTracks_]
   Short_t         mMcTracks_mParentGeantId[kMaxmMcTracks];   //[mMcTracks_]
   Float_t         mMcTracks_mEmcEnergyMcHit[kMaxmMcTracks][3];   //[mMcTracks_]
   Float_t         mMcTracks_mEmcEnergyMcSum[kMaxmMcTracks];   //[mMcTracks_]
   Short_t         mMcTracks_mEmcSoftIdHiTowerMc[kMaxmMcTracks][3];   //[mMcTracks_]
   Short_t         mMcTracks_mNAssocGl[kMaxmMcTracks];   //[mMcTracks_]
   Short_t         mMcTracks_mNAssocPr[kMaxmMcTracks];   //[mMcTracks_]
   Short_t         mMcTracks_mIsPrimary[kMaxmMcTracks];   //[mMcTracks_]
   UInt_t          mMcTracks_fUniqueID[kMaxmMcTracks];   //[mMcTracks_]
   UInt_t          mMcTracks_fBits[kMaxmMcTracks];   //[mMcTracks_]
   Int_t           mMatchedPairs_;
   Short_t         mMatchedPairs_mNCommonHit[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mIsBestContam[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mDominatrack[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mDominCommonHit[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mAvgQuality[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Char_t          mMatchedPairs_mIsValid[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mPtMc[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mPzMc[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mEtaMc[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mPhiMc[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mNHitMc[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mNSvtHitMc[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mNSsdHitMc[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mNFtpcHitMc[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mNBemcHitMc[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mNBprsHitMc[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mNBsmdeHitMc[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mNBsmdpHitMc[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mNEemcHitMc[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mNEprsHitMc[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mNEsmduHitMc[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mNEsmdvHitMc[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mGeantId[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mChargeMc[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mStopR[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mKey[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mParentKey[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mParentGeantId[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mEmcEnergyMcHit[kMaxmMatchedPairs][3];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mEmcEnergyMcSum[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mEmcSoftIdHiTowerMc[kMaxmMatchedPairs][3];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mNAssocGl[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mNAssocPr[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mIsPrimary[kMaxmMatchedPairs];   //[mMatchedPairs_]
   UInt_t          mMatchedPairs_fUniqueID[kMaxmMatchedPairs];   //[mMatchedPairs_]
   UInt_t          mMatchedPairs_fBits[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Char_t          mMatchedPairs_mIsValidGl[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mPtPr[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mPzPr[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mEtaPr[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mPhiPr[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mDcaPr[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mDcaXYPr[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mDcaZPr[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mDcaXYPrMcV[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mDcaZPrMcV[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mCurvPr[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mTanLPr[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mErrP[kMaxmMatchedPairs][5];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mChi2Pr[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mFlag[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mDedx[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mPtGl[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mPzGl[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mEtaGl[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mPhiGl[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mDcaGl[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mDcaXYGl[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mDcaZGl[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mDcaXYGlMcV[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mDcaZGlMcV[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mCurvGl[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mTanLGl[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mErrG[kMaxmMatchedPairs][5];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mPidPion[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mPidProton[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mPidKaon[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mPidElectron[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mFirstZ[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mLastZ[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mFirstPadrow[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mLastPadrow[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mFirstFitPadrow[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mLastFitPadrow[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mFirstSector[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mLastSector[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mRecoKey[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mFitPts[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mFitSvt[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mFitSsd[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mFitFtpc[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mDedxPts[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mAllPts[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mCharge[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mNAssocMc[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mNPossible[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Char_t          mMatchedPairs_mIsValidPr[kMaxmMatchedPairs];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mEmcTowerAdc[kMaxmMatchedPairs][3];   //[mMatchedPairs_]
   Float_t         mMatchedPairs_mEmcEnergyRcHit[kMaxmMatchedPairs][3];   //[mMatchedPairs_]
   Short_t         mMatchedPairs_mEmcSoftIdHiTowerRc[kMaxmMatchedPairs][3];   //[mMatchedPairs_]
   Int_t           mMergedPairs_;
   Short_t         mMergedPairs_mNCommonHit[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mIsBestContam[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mDominatrack[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mDominCommonHit[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mAvgQuality[kMaxmMergedPairs];   //[mMergedPairs_]
   Char_t          mMergedPairs_mIsValid[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mPtMc[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mPzMc[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mEtaMc[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mPhiMc[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mNHitMc[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mNSvtHitMc[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mNSsdHitMc[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mNFtpcHitMc[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mNBemcHitMc[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mNBprsHitMc[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mNBsmdeHitMc[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mNBsmdpHitMc[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mNEemcHitMc[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mNEprsHitMc[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mNEsmduHitMc[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mNEsmdvHitMc[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mGeantId[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mChargeMc[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mStopR[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mKey[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mParentKey[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mParentGeantId[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mEmcEnergyMcHit[kMaxmMergedPairs][3];   //[mMergedPairs_]
   Float_t         mMergedPairs_mEmcEnergyMcSum[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mEmcSoftIdHiTowerMc[kMaxmMergedPairs][3];   //[mMergedPairs_]
   Short_t         mMergedPairs_mNAssocGl[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mNAssocPr[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mIsPrimary[kMaxmMergedPairs];   //[mMergedPairs_]
   UInt_t          mMergedPairs_fUniqueID[kMaxmMergedPairs];   //[mMergedPairs_]
   UInt_t          mMergedPairs_fBits[kMaxmMergedPairs];   //[mMergedPairs_]
   Char_t          mMergedPairs_mIsValidGl[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mPtPr[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mPzPr[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mEtaPr[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mPhiPr[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mDcaPr[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mDcaXYPr[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mDcaZPr[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mDcaXYPrMcV[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mDcaZPrMcV[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mCurvPr[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mTanLPr[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mErrP[kMaxmMergedPairs][5];   //[mMergedPairs_]
   Float_t         mMergedPairs_mChi2Pr[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mFlag[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mDedx[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mPtGl[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mPzGl[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mEtaGl[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mPhiGl[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mDcaGl[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mDcaXYGl[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mDcaZGl[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mDcaXYGlMcV[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mDcaZGlMcV[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mCurvGl[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mTanLGl[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mErrG[kMaxmMergedPairs][5];   //[mMergedPairs_]
   Float_t         mMergedPairs_mPidPion[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mPidProton[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mPidKaon[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mPidElectron[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mFirstZ[kMaxmMergedPairs];   //[mMergedPairs_]
   Float_t         mMergedPairs_mLastZ[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mFirstPadrow[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mLastPadrow[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mFirstFitPadrow[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mLastFitPadrow[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mFirstSector[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mLastSector[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mRecoKey[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mFitPts[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mFitSvt[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mFitSsd[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mFitFtpc[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mDedxPts[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mAllPts[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mCharge[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mNAssocMc[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mNPossible[kMaxmMergedPairs];   //[mMergedPairs_]
   Char_t          mMergedPairs_mIsValidPr[kMaxmMergedPairs];   //[mMergedPairs_]
   Short_t         mMergedPairs_mEmcTowerAdc[kMaxmMergedPairs][3];   //[mMergedPairs_]
   Float_t         mMergedPairs_mEmcEnergyRcHit[kMaxmMergedPairs][3];   //[mMergedPairs_]
   Short_t         mMergedPairs_mEmcSoftIdHiTowerRc[kMaxmMergedPairs][3];   //[mMergedPairs_]
   Int_t           mSplitPairs_;
   Short_t         mSplitPairs_mNCommonHit[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mIsBestContam[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mDominatrack[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mDominCommonHit[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mAvgQuality[kMaxmSplitPairs];   //[mSplitPairs_]
   Char_t          mSplitPairs_mIsValid[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mPtMc[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mPzMc[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mEtaMc[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mPhiMc[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mNHitMc[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mNSvtHitMc[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mNSsdHitMc[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mNFtpcHitMc[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mNBemcHitMc[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mNBprsHitMc[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mNBsmdeHitMc[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mNBsmdpHitMc[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mNEemcHitMc[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mNEprsHitMc[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mNEsmduHitMc[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mNEsmdvHitMc[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mGeantId[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mChargeMc[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mStopR[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mKey[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mParentKey[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mParentGeantId[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mEmcEnergyMcHit[kMaxmSplitPairs][3];   //[mSplitPairs_]
   Float_t         mSplitPairs_mEmcEnergyMcSum[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mEmcSoftIdHiTowerMc[kMaxmSplitPairs][3];   //[mSplitPairs_]
   Short_t         mSplitPairs_mNAssocGl[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mNAssocPr[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mIsPrimary[kMaxmSplitPairs];   //[mSplitPairs_]
   UInt_t          mSplitPairs_fUniqueID[kMaxmSplitPairs];   //[mSplitPairs_]
   UInt_t          mSplitPairs_fBits[kMaxmSplitPairs];   //[mSplitPairs_]
   Char_t          mSplitPairs_mIsValidGl[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mPtPr[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mPzPr[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mEtaPr[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mPhiPr[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mDcaPr[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mDcaXYPr[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mDcaZPr[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mDcaXYPrMcV[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mDcaZPrMcV[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mCurvPr[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mTanLPr[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mErrP[kMaxmSplitPairs][5];   //[mSplitPairs_]
   Float_t         mSplitPairs_mChi2Pr[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mFlag[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mDedx[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mPtGl[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mPzGl[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mEtaGl[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mPhiGl[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mDcaGl[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mDcaXYGl[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mDcaZGl[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mDcaXYGlMcV[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mDcaZGlMcV[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mCurvGl[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mTanLGl[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mErrG[kMaxmSplitPairs][5];   //[mSplitPairs_]
   Float_t         mSplitPairs_mPidPion[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mPidProton[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mPidKaon[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mPidElectron[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mFirstZ[kMaxmSplitPairs];   //[mSplitPairs_]
   Float_t         mSplitPairs_mLastZ[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mFirstPadrow[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mLastPadrow[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mFirstFitPadrow[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mLastFitPadrow[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mFirstSector[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mLastSector[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mRecoKey[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mFitPts[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mFitSvt[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mFitSsd[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mFitFtpc[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mDedxPts[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mAllPts[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mCharge[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mNAssocMc[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mNPossible[kMaxmSplitPairs];   //[mSplitPairs_]
   Char_t          mSplitPairs_mIsValidPr[kMaxmSplitPairs];   //[mSplitPairs_]
   Short_t         mSplitPairs_mEmcTowerAdc[kMaxmSplitPairs][3];   //[mSplitPairs_]
   Float_t         mSplitPairs_mEmcEnergyRcHit[kMaxmSplitPairs][3];   //[mSplitPairs_]
   Short_t         mSplitPairs_mEmcSoftIdHiTowerRc[kMaxmSplitPairs][3];   //[mSplitPairs_]
   Int_t           mGhostPairs_;
   Short_t         mGhostPairs_mNCommonHit[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mIsBestContam[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mDominatrack[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mDominCommonHit[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mAvgQuality[kMaxmGhostPairs];   //[mGhostPairs_]
   Char_t          mGhostPairs_mIsValid[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mPtMc[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mPzMc[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mEtaMc[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mPhiMc[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mNHitMc[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mNSvtHitMc[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mNSsdHitMc[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mNFtpcHitMc[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mNBemcHitMc[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mNBprsHitMc[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mNBsmdeHitMc[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mNBsmdpHitMc[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mNEemcHitMc[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mNEprsHitMc[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mNEsmduHitMc[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mNEsmdvHitMc[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mGeantId[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mChargeMc[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mStopR[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mKey[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mParentKey[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mParentGeantId[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mEmcEnergyMcHit[kMaxmGhostPairs][3];   //[mGhostPairs_]
   Float_t         mGhostPairs_mEmcEnergyMcSum[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mEmcSoftIdHiTowerMc[kMaxmGhostPairs][3];   //[mGhostPairs_]
   Short_t         mGhostPairs_mNAssocGl[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mNAssocPr[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mIsPrimary[kMaxmGhostPairs];   //[mGhostPairs_]
   UInt_t          mGhostPairs_fUniqueID[kMaxmGhostPairs];   //[mGhostPairs_]
   UInt_t          mGhostPairs_fBits[kMaxmGhostPairs];   //[mGhostPairs_]
   Char_t          mGhostPairs_mIsValidGl[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mPtPr[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mPzPr[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mEtaPr[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mPhiPr[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mDcaPr[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mDcaXYPr[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mDcaZPr[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mDcaXYPrMcV[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mDcaZPrMcV[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mCurvPr[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mTanLPr[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mErrP[kMaxmGhostPairs][5];   //[mGhostPairs_]
   Float_t         mGhostPairs_mChi2Pr[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mFlag[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mDedx[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mPtGl[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mPzGl[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mEtaGl[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mPhiGl[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mDcaGl[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mDcaXYGl[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mDcaZGl[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mDcaXYGlMcV[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mDcaZGlMcV[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mCurvGl[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mTanLGl[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mErrG[kMaxmGhostPairs][5];   //[mGhostPairs_]
   Float_t         mGhostPairs_mPidPion[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mPidProton[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mPidKaon[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mPidElectron[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mFirstZ[kMaxmGhostPairs];   //[mGhostPairs_]
   Float_t         mGhostPairs_mLastZ[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mFirstPadrow[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mLastPadrow[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mFirstFitPadrow[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mLastFitPadrow[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mFirstSector[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mLastSector[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mRecoKey[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mFitPts[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mFitSvt[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mFitSsd[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mFitFtpc[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mDedxPts[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mAllPts[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mCharge[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mNAssocMc[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mNPossible[kMaxmGhostPairs];   //[mGhostPairs_]
   Char_t          mGhostPairs_mIsValidPr[kMaxmGhostPairs];   //[mGhostPairs_]
   Short_t         mGhostPairs_mEmcTowerAdc[kMaxmGhostPairs][3];   //[mGhostPairs_]
   Float_t         mGhostPairs_mEmcEnergyRcHit[kMaxmGhostPairs][3];   //[mGhostPairs_]
   Short_t         mGhostPairs_mEmcSoftIdHiTowerRc[kMaxmGhostPairs][3];   //[mGhostPairs_]
   Int_t           mContamPairs_;
   Int_t           mContamPairs_mParentGeantId[kMaxmContamPairs];   //[mContamPairs_]
   Int_t           mContamPairs_mGeantProcess[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mPtMcParent[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mEtaMcParent[kMaxmContamPairs];   //[mContamPairs_]
   Int_t           mContamPairs_mParentParentGeantId[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mPtMcParentParent[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mStartX[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mStartY[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mStartZ[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mNCommonHit[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mIsBestContam[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mDominatrack[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mDominCommonHit[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mAvgQuality[kMaxmContamPairs];   //[mContamPairs_]
   Char_t          mContamPairs_mIsValid[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mPtMc[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mPzMc[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mEtaMc[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mPhiMc[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mNHitMc[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mNSvtHitMc[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mNSsdHitMc[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mNFtpcHitMc[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mNBemcHitMc[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mNBprsHitMc[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mNBsmdeHitMc[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mNBsmdpHitMc[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mNEemcHitMc[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mNEprsHitMc[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mNEsmduHitMc[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mNEsmdvHitMc[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mGeantId[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mChargeMc[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mStopR[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mKey[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mParentKey[kMaxmContamPairs];   //[mContamPairs_]
   //   Short_t         mContamPairs_mParentGeantId[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mEmcEnergyMcHit[kMaxmContamPairs][3];   //[mContamPairs_]
   Float_t         mContamPairs_mEmcEnergyMcSum[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mEmcSoftIdHiTowerMc[kMaxmContamPairs][3];   //[mContamPairs_]
   Short_t         mContamPairs_mNAssocGl[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mNAssocPr[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mIsPrimary[kMaxmContamPairs];   //[mContamPairs_]
   UInt_t          mContamPairs_fUniqueID[kMaxmContamPairs];   //[mContamPairs_]
   UInt_t          mContamPairs_fBits[kMaxmContamPairs];   //[mContamPairs_]
   Char_t          mContamPairs_mIsValidGl[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mPtPr[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mPzPr[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mEtaPr[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mPhiPr[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mDcaPr[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mDcaXYPr[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mDcaZPr[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mDcaXYPrMcV[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mDcaZPrMcV[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mCurvPr[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mTanLPr[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mErrP[kMaxmContamPairs][5];   //[mContamPairs_]
   Float_t         mContamPairs_mChi2Pr[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mFlag[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mDedx[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mPtGl[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mPzGl[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mEtaGl[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mPhiGl[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mDcaGl[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mDcaXYGl[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mDcaZGl[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mDcaXYGlMcV[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mDcaZGlMcV[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mCurvGl[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mTanLGl[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mErrG[kMaxmContamPairs][5];   //[mContamPairs_]
   Float_t         mContamPairs_mPidPion[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mPidProton[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mPidKaon[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mPidElectron[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mFirstZ[kMaxmContamPairs];   //[mContamPairs_]
   Float_t         mContamPairs_mLastZ[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mFirstPadrow[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mLastPadrow[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mFirstFitPadrow[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mLastFitPadrow[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mFirstSector[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mLastSector[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mRecoKey[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mFitPts[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mFitSvt[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mFitSsd[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mFitFtpc[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mDedxPts[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mAllPts[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mCharge[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mNAssocMc[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mNPossible[kMaxmContamPairs];   //[mContamPairs_]
   Char_t          mContamPairs_mIsValidPr[kMaxmContamPairs];   //[mContamPairs_]
   Short_t         mContamPairs_mEmcTowerAdc[kMaxmContamPairs][3];   //[mContamPairs_]
   Float_t         mContamPairs_mEmcEnergyRcHit[kMaxmContamPairs][3];   //[mContamPairs_]
   Short_t         mContamPairs_mEmcSoftIdHiTowerRc[kMaxmContamPairs][3];   //[mContamPairs_]
   Int_t           mMatGlobPairs_;
   Short_t         mMatGlobPairs_mNCommonHit[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mIsBestContam[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mDominatrack[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mDominCommonHit[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mAvgQuality[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Char_t          mMatGlobPairs_mIsValid[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mPtMc[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mPzMc[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mEtaMc[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mPhiMc[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mNHitMc[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mNSvtHitMc[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mNSsdHitMc[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mNFtpcHitMc[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mNBemcHitMc[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mNBprsHitMc[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mNBsmdeHitMc[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mNBsmdpHitMc[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mNEemcHitMc[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mNEprsHitMc[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mNEsmduHitMc[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mNEsmdvHitMc[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mGeantId[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mChargeMc[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mStopR[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mKey[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mParentKey[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mParentGeantId[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mEmcEnergyMcHit[kMaxmMatGlobPairs][3];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mEmcEnergyMcSum[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mEmcSoftIdHiTowerMc[kMaxmMatGlobPairs][3];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mNAssocGl[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mNAssocPr[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mIsPrimary[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   UInt_t          mMatGlobPairs_fUniqueID[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   UInt_t          mMatGlobPairs_fBits[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Char_t          mMatGlobPairs_mIsValidGl[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mPtPr[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mPzPr[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mEtaPr[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mPhiPr[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mDcaPr[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mDcaXYPr[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mDcaZPr[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mDcaXYPrMcV[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mDcaZPrMcV[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mCurvPr[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mTanLPr[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mErrP[kMaxmMatGlobPairs][5];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mChi2Pr[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mFlag[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mDedx[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mPtGl[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mPzGl[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mEtaGl[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mPhiGl[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mDcaGl[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mDcaXYGl[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mDcaZGl[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mDcaXYGlMcV[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mDcaZGlMcV[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mCurvGl[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mTanLGl[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mErrG[kMaxmMatGlobPairs][5];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mPidPion[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mPidProton[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mPidKaon[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mPidElectron[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mFirstZ[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mLastZ[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mFirstPadrow[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mLastPadrow[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mFirstFitPadrow[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mLastFitPadrow[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mFirstSector[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mLastSector[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mRecoKey[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mFitPts[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mFitSvt[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mFitSsd[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mFitFtpc[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mDedxPts[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mAllPts[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mCharge[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mNAssocMc[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mNPossible[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Char_t          mMatGlobPairs_mIsValidPr[kMaxmMatGlobPairs];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mEmcTowerAdc[kMaxmMatGlobPairs][3];   //[mMatGlobPairs_]
   Float_t         mMatGlobPairs_mEmcEnergyRcHit[kMaxmMatGlobPairs][3];   //[mMatGlobPairs_]
   Short_t         mMatGlobPairs_mEmcSoftIdHiTowerRc[kMaxmMatGlobPairs][3];   //[mMatGlobPairs_]
   UInt_t          fUniqueID;
   UInt_t          fBits;

   // List of branches
   TBranch        *b_StMiniMcEvent_mEventId;   //!
   TBranch        *b_StMiniMcEvent_mRunId;   //!
   TBranch        *b_StMiniMcEvent_mOriginMult;   //!
   TBranch        *b_StMiniMcEvent_mCentralMult;   //!
   TBranch        *b_StMiniMcEvent_mCentrality;   //!
   TBranch        *b_StMiniMcEvent_mNUncorrectedNegativePrimaries;   //!
   TBranch        *b_StMiniMcEvent_mNUncorrectedPrimaries;   //!
   TBranch        *b_StMiniMcEvent_mNFtpcWUncorrectedPrimaries;   //!
   TBranch        *b_StMiniMcEvent_mNFtpcEUncorrectedPrimaries;   //!
   TBranch        *b_StMiniMcEvent_mMcMult;   //!
   TBranch        *b_StMiniMcEvent_mNMcNch;   //!
   TBranch        *b_StMiniMcEvent_mNMcFtpcWNch;   //!
   TBranch        *b_StMiniMcEvent_mNMcFtpcENch;   //!
   TBranch        *b_StMiniMcEvent_mNMcHminus;   //!
   TBranch        *b_StMiniMcEvent_mNMcGlobal;   //!
   TBranch        *b_StMiniMcEvent_mNMcGoodGlobal20;   //!
   TBranch        *b_StMiniMcEvent_mNRcGlobal;   //!
   TBranch        *b_StMiniMcEvent_mNRcGoodGlobal20;   //!
   TBranch        *b_StMiniMcEvent_mVertexX;   //!
   TBranch        *b_StMiniMcEvent_mVertexY;   //!
   TBranch        *b_StMiniMcEvent_mVertexZ;   //!
   TBranch        *b_StMiniMcEvent_mVertexCovMatrix;   //!
   TBranch        *b_StMiniMcEvent_mMcVertexX;   //!
   TBranch        *b_StMiniMcEvent_mMcVertexY;   //!
   TBranch        *b_StMiniMcEvent_mMcVertexZ;   //!
   TBranch        *b_StMiniMcEvent_mMagField;   //!
   TBranch        *b_StMiniMcEvent_mCenterOfMassEnergy;   //!
   TBranch        *b_StMiniMcEvent_mBackgroundRate;   //!
   TBranch        *b_StMiniMcEvent_mBeamMassNumberEast;   //!
   TBranch        *b_StMiniMcEvent_mBeamMassNumberWest;   //!
   TBranch        *b_StMiniMcEvent_mCtb;   //!
   TBranch        *b_StMiniMcEvent_mZdcE;   //!
   TBranch        *b_StMiniMcEvent_mZdcW;   //!
   TBranch        *b_StMiniMcEvent_mNMcTrack;   //!
   TBranch        *b_StMiniMcEvent_mNMatchedPair;   //!
   TBranch        *b_StMiniMcEvent_mNMergedPair;   //!
   TBranch        *b_StMiniMcEvent_mNSplitPair;   //!
   TBranch        *b_StMiniMcEvent_mNGhostPair;   //!
   TBranch        *b_StMiniMcEvent_mNContamPair;   //!
   TBranch        *b_StMiniMcEvent_mNMatGlobPair;   //!
   TBranch        *b_mMcTracks_;   //!
   TBranch        *b_mMcTracks_mIsValid;   //!
   TBranch        *b_mMcTracks_mPtMc;   //!
   TBranch        *b_mMcTracks_mPzMc;   //!
   TBranch        *b_mMcTracks_mEtaMc;   //!
   TBranch        *b_mMcTracks_mPhiMc;   //!
   TBranch        *b_mMcTracks_mNHitMc;   //!
   TBranch        *b_mMcTracks_mNSvtHitMc;   //!
   TBranch        *b_mMcTracks_mNSsdHitMc;   //!
   TBranch        *b_mMcTracks_mNFtpcHitMc;   //!
   TBranch        *b_mMcTracks_mNBemcHitMc;   //!
   TBranch        *b_mMcTracks_mNBprsHitMc;   //!
   TBranch        *b_mMcTracks_mNBsmdeHitMc;   //!
   TBranch        *b_mMcTracks_mNBsmdpHitMc;   //!
   TBranch        *b_mMcTracks_mNEemcHitMc;   //!
   TBranch        *b_mMcTracks_mNEprsHitMc;   //!
   TBranch        *b_mMcTracks_mNEsmduHitMc;   //!
   TBranch        *b_mMcTracks_mNEsmdvHitMc;   //!
   TBranch        *b_mMcTracks_mGeantId;   //!
   TBranch        *b_mMcTracks_mChargeMc;   //!
   TBranch        *b_mMcTracks_mStopR;   //!
   TBranch        *b_mMcTracks_mKey;   //!
   TBranch        *b_mMcTracks_mParentKey;   //!
   TBranch        *b_mMcTracks_mParentGeantId;   //!
   TBranch        *b_mMcTracks_mEmcEnergyMcHit;   //!
   TBranch        *b_mMcTracks_mEmcEnergyMcSum;   //!
   TBranch        *b_mMcTracks_mEmcSoftIdHiTowerMc;   //!
   TBranch        *b_mMcTracks_mNAssocGl;   //!
   TBranch        *b_mMcTracks_mNAssocPr;   //!
   TBranch        *b_mMcTracks_mIsPrimary;   //!
   TBranch        *b_mMcTracks_fUniqueID;   //!
   TBranch        *b_mMcTracks_fBits;   //!
   TBranch        *b_mMatchedPairs_;   //!
   TBranch        *b_mMatchedPairs_mNCommonHit;   //!
   TBranch        *b_mMatchedPairs_mIsBestContam;   //!
   TBranch        *b_mMatchedPairs_mDominatrack;   //!
   TBranch        *b_mMatchedPairs_mDominCommonHit;   //!
   TBranch        *b_mMatchedPairs_mAvgQuality;   //!
   TBranch        *b_mMatchedPairs_mIsValid;   //!
   TBranch        *b_mMatchedPairs_mPtMc;   //!
   TBranch        *b_mMatchedPairs_mPzMc;   //!
   TBranch        *b_mMatchedPairs_mEtaMc;   //!
   TBranch        *b_mMatchedPairs_mPhiMc;   //!
   TBranch        *b_mMatchedPairs_mNHitMc;   //!
   TBranch        *b_mMatchedPairs_mNSvtHitMc;   //!
   TBranch        *b_mMatchedPairs_mNSsdHitMc;   //!
   TBranch        *b_mMatchedPairs_mNFtpcHitMc;   //!
   TBranch        *b_mMatchedPairs_mNBemcHitMc;   //!
   TBranch        *b_mMatchedPairs_mNBprsHitMc;   //!
   TBranch        *b_mMatchedPairs_mNBsmdeHitMc;   //!
   TBranch        *b_mMatchedPairs_mNBsmdpHitMc;   //!
   TBranch        *b_mMatchedPairs_mNEemcHitMc;   //!
   TBranch        *b_mMatchedPairs_mNEprsHitMc;   //!
   TBranch        *b_mMatchedPairs_mNEsmduHitMc;   //!
   TBranch        *b_mMatchedPairs_mNEsmdvHitMc;   //!
   TBranch        *b_mMatchedPairs_mGeantId;   //!
   TBranch        *b_mMatchedPairs_mChargeMc;   //!
   TBranch        *b_mMatchedPairs_mStopR;   //!
   TBranch        *b_mMatchedPairs_mKey;   //!
   TBranch        *b_mMatchedPairs_mParentKey;   //!
   TBranch        *b_mMatchedPairs_mParentGeantId;   //!
   TBranch        *b_mMatchedPairs_mEmcEnergyMcHit;   //!
   TBranch        *b_mMatchedPairs_mEmcEnergyMcSum;   //!
   TBranch        *b_mMatchedPairs_mEmcSoftIdHiTowerMc;   //!
   TBranch        *b_mMatchedPairs_mNAssocGl;   //!
   TBranch        *b_mMatchedPairs_mNAssocPr;   //!
   TBranch        *b_mMatchedPairs_mIsPrimary;   //!
   TBranch        *b_mMatchedPairs_fUniqueID;   //!
   TBranch        *b_mMatchedPairs_fBits;   //!
   TBranch        *b_mMatchedPairs_mIsValidGl;   //!
   TBranch        *b_mMatchedPairs_mPtPr;   //!
   TBranch        *b_mMatchedPairs_mPzPr;   //!
   TBranch        *b_mMatchedPairs_mEtaPr;   //!
   TBranch        *b_mMatchedPairs_mPhiPr;   //!
   TBranch        *b_mMatchedPairs_mDcaPr;   //!
   TBranch        *b_mMatchedPairs_mDcaXYPr;   //!
   TBranch        *b_mMatchedPairs_mDcaZPr;   //!
   TBranch        *b_mMatchedPairs_mDcaXYPrMcV;   //!
   TBranch        *b_mMatchedPairs_mDcaZPrMcV;   //!
   TBranch        *b_mMatchedPairs_mCurvPr;   //!
   TBranch        *b_mMatchedPairs_mTanLPr;   //!
   TBranch        *b_mMatchedPairs_mErrP;   //!
   TBranch        *b_mMatchedPairs_mChi2Pr;   //!
   TBranch        *b_mMatchedPairs_mFlag;   //!
   TBranch        *b_mMatchedPairs_mDedx;   //!
   TBranch        *b_mMatchedPairs_mPtGl;   //!
   TBranch        *b_mMatchedPairs_mPzGl;   //!
   TBranch        *b_mMatchedPairs_mEtaGl;   //!
   TBranch        *b_mMatchedPairs_mPhiGl;   //!
   TBranch        *b_mMatchedPairs_mDcaGl;   //!
   TBranch        *b_mMatchedPairs_mDcaXYGl;   //!
   TBranch        *b_mMatchedPairs_mDcaZGl;   //!
   TBranch        *b_mMatchedPairs_mDcaXYGlMcV;   //!
   TBranch        *b_mMatchedPairs_mDcaZGlMcV;   //!
   TBranch        *b_mMatchedPairs_mCurvGl;   //!
   TBranch        *b_mMatchedPairs_mTanLGl;   //!
   TBranch        *b_mMatchedPairs_mErrG;   //!
   TBranch        *b_mMatchedPairs_mPidPion;   //!
   TBranch        *b_mMatchedPairs_mPidProton;   //!
   TBranch        *b_mMatchedPairs_mPidKaon;   //!
   TBranch        *b_mMatchedPairs_mPidElectron;   //!
   TBranch        *b_mMatchedPairs_mFirstZ;   //!
   TBranch        *b_mMatchedPairs_mLastZ;   //!
   TBranch        *b_mMatchedPairs_mFirstPadrow;   //!
   TBranch        *b_mMatchedPairs_mLastPadrow;   //!
   TBranch        *b_mMatchedPairs_mFirstFitPadrow;   //!
   TBranch        *b_mMatchedPairs_mLastFitPadrow;   //!
   TBranch        *b_mMatchedPairs_mFirstSector;   //!
   TBranch        *b_mMatchedPairs_mLastSector;   //!
   TBranch        *b_mMatchedPairs_mRecoKey;   //!
   TBranch        *b_mMatchedPairs_mFitPts;   //!
   TBranch        *b_mMatchedPairs_mFitSvt;   //!
   TBranch        *b_mMatchedPairs_mFitSsd;   //!
   TBranch        *b_mMatchedPairs_mFitFtpc;   //!
   TBranch        *b_mMatchedPairs_mDedxPts;   //!
   TBranch        *b_mMatchedPairs_mAllPts;   //!
   TBranch        *b_mMatchedPairs_mCharge;   //!
   TBranch        *b_mMatchedPairs_mNAssocMc;   //!
   TBranch        *b_mMatchedPairs_mNPossible;   //!
   TBranch        *b_mMatchedPairs_mIsValidPr;   //!
   TBranch        *b_mMatchedPairs_mEmcTowerAdc;   //!
   TBranch        *b_mMatchedPairs_mEmcEnergyRcHit;   //!
   TBranch        *b_mMatchedPairs_mEmcSoftIdHiTowerRc;   //!
   TBranch        *b_mMergedPairs_;   //!
   TBranch        *b_mMergedPairs_mNCommonHit;   //!
   TBranch        *b_mMergedPairs_mIsBestContam;   //!
   TBranch        *b_mMergedPairs_mDominatrack;   //!
   TBranch        *b_mMergedPairs_mDominCommonHit;   //!
   TBranch        *b_mMergedPairs_mAvgQuality;   //!
   TBranch        *b_mMergedPairs_mIsValid;   //!
   TBranch        *b_mMergedPairs_mPtMc;   //!
   TBranch        *b_mMergedPairs_mPzMc;   //!
   TBranch        *b_mMergedPairs_mEtaMc;   //!
   TBranch        *b_mMergedPairs_mPhiMc;   //!
   TBranch        *b_mMergedPairs_mNHitMc;   //!
   TBranch        *b_mMergedPairs_mNSvtHitMc;   //!
   TBranch        *b_mMergedPairs_mNSsdHitMc;   //!
   TBranch        *b_mMergedPairs_mNFtpcHitMc;   //!
   TBranch        *b_mMergedPairs_mNBemcHitMc;   //!
   TBranch        *b_mMergedPairs_mNBprsHitMc;   //!
   TBranch        *b_mMergedPairs_mNBsmdeHitMc;   //!
   TBranch        *b_mMergedPairs_mNBsmdpHitMc;   //!
   TBranch        *b_mMergedPairs_mNEemcHitMc;   //!
   TBranch        *b_mMergedPairs_mNEprsHitMc;   //!
   TBranch        *b_mMergedPairs_mNEsmduHitMc;   //!
   TBranch        *b_mMergedPairs_mNEsmdvHitMc;   //!
   TBranch        *b_mMergedPairs_mGeantId;   //!
   TBranch        *b_mMergedPairs_mChargeMc;   //!
   TBranch        *b_mMergedPairs_mStopR;   //!
   TBranch        *b_mMergedPairs_mKey;   //!
   TBranch        *b_mMergedPairs_mParentKey;   //!
   TBranch        *b_mMergedPairs_mParentGeantId;   //!
   TBranch        *b_mMergedPairs_mEmcEnergyMcHit;   //!
   TBranch        *b_mMergedPairs_mEmcEnergyMcSum;   //!
   TBranch        *b_mMergedPairs_mEmcSoftIdHiTowerMc;   //!
   TBranch        *b_mMergedPairs_mNAssocGl;   //!
   TBranch        *b_mMergedPairs_mNAssocPr;   //!
   TBranch        *b_mMergedPairs_mIsPrimary;   //!
   TBranch        *b_mMergedPairs_fUniqueID;   //!
   TBranch        *b_mMergedPairs_fBits;   //!
   TBranch        *b_mMergedPairs_mIsValidGl;   //!
   TBranch        *b_mMergedPairs_mPtPr;   //!
   TBranch        *b_mMergedPairs_mPzPr;   //!
   TBranch        *b_mMergedPairs_mEtaPr;   //!
   TBranch        *b_mMergedPairs_mPhiPr;   //!
   TBranch        *b_mMergedPairs_mDcaPr;   //!
   TBranch        *b_mMergedPairs_mDcaXYPr;   //!
   TBranch        *b_mMergedPairs_mDcaZPr;   //!
   TBranch        *b_mMergedPairs_mDcaXYPrMcV;   //!
   TBranch        *b_mMergedPairs_mDcaZPrMcV;   //!
   TBranch        *b_mMergedPairs_mCurvPr;   //!
   TBranch        *b_mMergedPairs_mTanLPr;   //!
   TBranch        *b_mMergedPairs_mErrP;   //!
   TBranch        *b_mMergedPairs_mChi2Pr;   //!
   TBranch        *b_mMergedPairs_mFlag;   //!
   TBranch        *b_mMergedPairs_mDedx;   //!
   TBranch        *b_mMergedPairs_mPtGl;   //!
   TBranch        *b_mMergedPairs_mPzGl;   //!
   TBranch        *b_mMergedPairs_mEtaGl;   //!
   TBranch        *b_mMergedPairs_mPhiGl;   //!
   TBranch        *b_mMergedPairs_mDcaGl;   //!
   TBranch        *b_mMergedPairs_mDcaXYGl;   //!
   TBranch        *b_mMergedPairs_mDcaZGl;   //!
   TBranch        *b_mMergedPairs_mDcaXYGlMcV;   //!
   TBranch        *b_mMergedPairs_mDcaZGlMcV;   //!
   TBranch        *b_mMergedPairs_mCurvGl;   //!
   TBranch        *b_mMergedPairs_mTanLGl;   //!
   TBranch        *b_mMergedPairs_mErrG;   //!
   TBranch        *b_mMergedPairs_mPidPion;   //!
   TBranch        *b_mMergedPairs_mPidProton;   //!
   TBranch        *b_mMergedPairs_mPidKaon;   //!
   TBranch        *b_mMergedPairs_mPidElectron;   //!
   TBranch        *b_mMergedPairs_mFirstZ;   //!
   TBranch        *b_mMergedPairs_mLastZ;   //!
   TBranch        *b_mMergedPairs_mFirstPadrow;   //!
   TBranch        *b_mMergedPairs_mLastPadrow;   //!
   TBranch        *b_mMergedPairs_mFirstFitPadrow;   //!
   TBranch        *b_mMergedPairs_mLastFitPadrow;   //!
   TBranch        *b_mMergedPairs_mFirstSector;   //!
   TBranch        *b_mMergedPairs_mLastSector;   //!
   TBranch        *b_mMergedPairs_mRecoKey;   //!
   TBranch        *b_mMergedPairs_mFitPts;   //!
   TBranch        *b_mMergedPairs_mFitSvt;   //!
   TBranch        *b_mMergedPairs_mFitSsd;   //!
   TBranch        *b_mMergedPairs_mFitFtpc;   //!
   TBranch        *b_mMergedPairs_mDedxPts;   //!
   TBranch        *b_mMergedPairs_mAllPts;   //!
   TBranch        *b_mMergedPairs_mCharge;   //!
   TBranch        *b_mMergedPairs_mNAssocMc;   //!
   TBranch        *b_mMergedPairs_mNPossible;   //!
   TBranch        *b_mMergedPairs_mIsValidPr;   //!
   TBranch        *b_mMergedPairs_mEmcTowerAdc;   //!
   TBranch        *b_mMergedPairs_mEmcEnergyRcHit;   //!
   TBranch        *b_mMergedPairs_mEmcSoftIdHiTowerRc;   //!
   TBranch        *b_mSplitPairs_;   //!
   TBranch        *b_mSplitPairs_mNCommonHit;   //!
   TBranch        *b_mSplitPairs_mIsBestContam;   //!
   TBranch        *b_mSplitPairs_mDominatrack;   //!
   TBranch        *b_mSplitPairs_mDominCommonHit;   //!
   TBranch        *b_mSplitPairs_mAvgQuality;   //!
   TBranch        *b_mSplitPairs_mIsValid;   //!
   TBranch        *b_mSplitPairs_mPtMc;   //!
   TBranch        *b_mSplitPairs_mPzMc;   //!
   TBranch        *b_mSplitPairs_mEtaMc;   //!
   TBranch        *b_mSplitPairs_mPhiMc;   //!
   TBranch        *b_mSplitPairs_mNHitMc;   //!
   TBranch        *b_mSplitPairs_mNSvtHitMc;   //!
   TBranch        *b_mSplitPairs_mNSsdHitMc;   //!
   TBranch        *b_mSplitPairs_mNFtpcHitMc;   //!
   TBranch        *b_mSplitPairs_mNBemcHitMc;   //!
   TBranch        *b_mSplitPairs_mNBprsHitMc;   //!
   TBranch        *b_mSplitPairs_mNBsmdeHitMc;   //!
   TBranch        *b_mSplitPairs_mNBsmdpHitMc;   //!
   TBranch        *b_mSplitPairs_mNEemcHitMc;   //!
   TBranch        *b_mSplitPairs_mNEprsHitMc;   //!
   TBranch        *b_mSplitPairs_mNEsmduHitMc;   //!
   TBranch        *b_mSplitPairs_mNEsmdvHitMc;   //!
   TBranch        *b_mSplitPairs_mGeantId;   //!
   TBranch        *b_mSplitPairs_mChargeMc;   //!
   TBranch        *b_mSplitPairs_mStopR;   //!
   TBranch        *b_mSplitPairs_mKey;   //!
   TBranch        *b_mSplitPairs_mParentKey;   //!
   TBranch        *b_mSplitPairs_mParentGeantId;   //!
   TBranch        *b_mSplitPairs_mEmcEnergyMcHit;   //!
   TBranch        *b_mSplitPairs_mEmcEnergyMcSum;   //!
   TBranch        *b_mSplitPairs_mEmcSoftIdHiTowerMc;   //!
   TBranch        *b_mSplitPairs_mNAssocGl;   //!
   TBranch        *b_mSplitPairs_mNAssocPr;   //!
   TBranch        *b_mSplitPairs_mIsPrimary;   //!
   TBranch        *b_mSplitPairs_fUniqueID;   //!
   TBranch        *b_mSplitPairs_fBits;   //!
   TBranch        *b_mSplitPairs_mIsValidGl;   //!
   TBranch        *b_mSplitPairs_mPtPr;   //!
   TBranch        *b_mSplitPairs_mPzPr;   //!
   TBranch        *b_mSplitPairs_mEtaPr;   //!
   TBranch        *b_mSplitPairs_mPhiPr;   //!
   TBranch        *b_mSplitPairs_mDcaPr;   //!
   TBranch        *b_mSplitPairs_mDcaXYPr;   //!
   TBranch        *b_mSplitPairs_mDcaZPr;   //!
   TBranch        *b_mSplitPairs_mDcaXYPrMcV;   //!
   TBranch        *b_mSplitPairs_mDcaZPrMcV;   //!
   TBranch        *b_mSplitPairs_mCurvPr;   //!
   TBranch        *b_mSplitPairs_mTanLPr;   //!
   TBranch        *b_mSplitPairs_mErrP;   //!
   TBranch        *b_mSplitPairs_mChi2Pr;   //!
   TBranch        *b_mSplitPairs_mFlag;   //!
   TBranch        *b_mSplitPairs_mDedx;   //!
   TBranch        *b_mSplitPairs_mPtGl;   //!
   TBranch        *b_mSplitPairs_mPzGl;   //!
   TBranch        *b_mSplitPairs_mEtaGl;   //!
   TBranch        *b_mSplitPairs_mPhiGl;   //!
   TBranch        *b_mSplitPairs_mDcaGl;   //!
   TBranch        *b_mSplitPairs_mDcaXYGl;   //!
   TBranch        *b_mSplitPairs_mDcaZGl;   //!
   TBranch        *b_mSplitPairs_mDcaXYGlMcV;   //!
   TBranch        *b_mSplitPairs_mDcaZGlMcV;   //!
   TBranch        *b_mSplitPairs_mCurvGl;   //!
   TBranch        *b_mSplitPairs_mTanLGl;   //!
   TBranch        *b_mSplitPairs_mErrG;   //!
   TBranch        *b_mSplitPairs_mPidPion;   //!
   TBranch        *b_mSplitPairs_mPidProton;   //!
   TBranch        *b_mSplitPairs_mPidKaon;   //!
   TBranch        *b_mSplitPairs_mPidElectron;   //!
   TBranch        *b_mSplitPairs_mFirstZ;   //!
   TBranch        *b_mSplitPairs_mLastZ;   //!
   TBranch        *b_mSplitPairs_mFirstPadrow;   //!
   TBranch        *b_mSplitPairs_mLastPadrow;   //!
   TBranch        *b_mSplitPairs_mFirstFitPadrow;   //!
   TBranch        *b_mSplitPairs_mLastFitPadrow;   //!
   TBranch        *b_mSplitPairs_mFirstSector;   //!
   TBranch        *b_mSplitPairs_mLastSector;   //!
   TBranch        *b_mSplitPairs_mRecoKey;   //!
   TBranch        *b_mSplitPairs_mFitPts;   //!
   TBranch        *b_mSplitPairs_mFitSvt;   //!
   TBranch        *b_mSplitPairs_mFitSsd;   //!
   TBranch        *b_mSplitPairs_mFitFtpc;   //!
   TBranch        *b_mSplitPairs_mDedxPts;   //!
   TBranch        *b_mSplitPairs_mAllPts;   //!
   TBranch        *b_mSplitPairs_mCharge;   //!
   TBranch        *b_mSplitPairs_mNAssocMc;   //!
   TBranch        *b_mSplitPairs_mNPossible;   //!
   TBranch        *b_mSplitPairs_mIsValidPr;   //!
   TBranch        *b_mSplitPairs_mEmcTowerAdc;   //!
   TBranch        *b_mSplitPairs_mEmcEnergyRcHit;   //!
   TBranch        *b_mSplitPairs_mEmcSoftIdHiTowerRc;   //!
   TBranch        *b_mGhostPairs_;   //!
   TBranch        *b_mGhostPairs_mNCommonHit;   //!
   TBranch        *b_mGhostPairs_mIsBestContam;   //!
   TBranch        *b_mGhostPairs_mDominatrack;   //!
   TBranch        *b_mGhostPairs_mDominCommonHit;   //!
   TBranch        *b_mGhostPairs_mAvgQuality;   //!
   TBranch        *b_mGhostPairs_mIsValid;   //!
   TBranch        *b_mGhostPairs_mPtMc;   //!
   TBranch        *b_mGhostPairs_mPzMc;   //!
   TBranch        *b_mGhostPairs_mEtaMc;   //!
   TBranch        *b_mGhostPairs_mPhiMc;   //!
   TBranch        *b_mGhostPairs_mNHitMc;   //!
   TBranch        *b_mGhostPairs_mNSvtHitMc;   //!
   TBranch        *b_mGhostPairs_mNSsdHitMc;   //!
   TBranch        *b_mGhostPairs_mNFtpcHitMc;   //!
   TBranch        *b_mGhostPairs_mNBemcHitMc;   //!
   TBranch        *b_mGhostPairs_mNBprsHitMc;   //!
   TBranch        *b_mGhostPairs_mNBsmdeHitMc;   //!
   TBranch        *b_mGhostPairs_mNBsmdpHitMc;   //!
   TBranch        *b_mGhostPairs_mNEemcHitMc;   //!
   TBranch        *b_mGhostPairs_mNEprsHitMc;   //!
   TBranch        *b_mGhostPairs_mNEsmduHitMc;   //!
   TBranch        *b_mGhostPairs_mNEsmdvHitMc;   //!
   TBranch        *b_mGhostPairs_mGeantId;   //!
   TBranch        *b_mGhostPairs_mChargeMc;   //!
   TBranch        *b_mGhostPairs_mStopR;   //!
   TBranch        *b_mGhostPairs_mKey;   //!
   TBranch        *b_mGhostPairs_mParentKey;   //!
   TBranch        *b_mGhostPairs_mParentGeantId;   //!
   TBranch        *b_mGhostPairs_mEmcEnergyMcHit;   //!
   TBranch        *b_mGhostPairs_mEmcEnergyMcSum;   //!
   TBranch        *b_mGhostPairs_mEmcSoftIdHiTowerMc;   //!
   TBranch        *b_mGhostPairs_mNAssocGl;   //!
   TBranch        *b_mGhostPairs_mNAssocPr;   //!
   TBranch        *b_mGhostPairs_mIsPrimary;   //!
   TBranch        *b_mGhostPairs_fUniqueID;   //!
   TBranch        *b_mGhostPairs_fBits;   //!
   TBranch        *b_mGhostPairs_mIsValidGl;   //!
   TBranch        *b_mGhostPairs_mPtPr;   //!
   TBranch        *b_mGhostPairs_mPzPr;   //!
   TBranch        *b_mGhostPairs_mEtaPr;   //!
   TBranch        *b_mGhostPairs_mPhiPr;   //!
   TBranch        *b_mGhostPairs_mDcaPr;   //!
   TBranch        *b_mGhostPairs_mDcaXYPr;   //!
   TBranch        *b_mGhostPairs_mDcaZPr;   //!
   TBranch        *b_mGhostPairs_mDcaXYPrMcV;   //!
   TBranch        *b_mGhostPairs_mDcaZPrMcV;   //!
   TBranch        *b_mGhostPairs_mCurvPr;   //!
   TBranch        *b_mGhostPairs_mTanLPr;   //!
   TBranch        *b_mGhostPairs_mErrP;   //!
   TBranch        *b_mGhostPairs_mChi2Pr;   //!
   TBranch        *b_mGhostPairs_mFlag;   //!
   TBranch        *b_mGhostPairs_mDedx;   //!
   TBranch        *b_mGhostPairs_mPtGl;   //!
   TBranch        *b_mGhostPairs_mPzGl;   //!
   TBranch        *b_mGhostPairs_mEtaGl;   //!
   TBranch        *b_mGhostPairs_mPhiGl;   //!
   TBranch        *b_mGhostPairs_mDcaGl;   //!
   TBranch        *b_mGhostPairs_mDcaXYGl;   //!
   TBranch        *b_mGhostPairs_mDcaZGl;   //!
   TBranch        *b_mGhostPairs_mDcaXYGlMcV;   //!
   TBranch        *b_mGhostPairs_mDcaZGlMcV;   //!
   TBranch        *b_mGhostPairs_mCurvGl;   //!
   TBranch        *b_mGhostPairs_mTanLGl;   //!
   TBranch        *b_mGhostPairs_mErrG;   //!
   TBranch        *b_mGhostPairs_mPidPion;   //!
   TBranch        *b_mGhostPairs_mPidProton;   //!
   TBranch        *b_mGhostPairs_mPidKaon;   //!
   TBranch        *b_mGhostPairs_mPidElectron;   //!
   TBranch        *b_mGhostPairs_mFirstZ;   //!
   TBranch        *b_mGhostPairs_mLastZ;   //!
   TBranch        *b_mGhostPairs_mFirstPadrow;   //!
   TBranch        *b_mGhostPairs_mLastPadrow;   //!
   TBranch        *b_mGhostPairs_mFirstFitPadrow;   //!
   TBranch        *b_mGhostPairs_mLastFitPadrow;   //!
   TBranch        *b_mGhostPairs_mFirstSector;   //!
   TBranch        *b_mGhostPairs_mLastSector;   //!
   TBranch        *b_mGhostPairs_mRecoKey;   //!
   TBranch        *b_mGhostPairs_mFitPts;   //!
   TBranch        *b_mGhostPairs_mFitSvt;   //!
   TBranch        *b_mGhostPairs_mFitSsd;   //!
   TBranch        *b_mGhostPairs_mFitFtpc;   //!
   TBranch        *b_mGhostPairs_mDedxPts;   //!
   TBranch        *b_mGhostPairs_mAllPts;   //!
   TBranch        *b_mGhostPairs_mCharge;   //!
   TBranch        *b_mGhostPairs_mNAssocMc;   //!
   TBranch        *b_mGhostPairs_mNPossible;   //!
   TBranch        *b_mGhostPairs_mIsValidPr;   //!
   TBranch        *b_mGhostPairs_mEmcTowerAdc;   //!
   TBranch        *b_mGhostPairs_mEmcEnergyRcHit;   //!
   TBranch        *b_mGhostPairs_mEmcSoftIdHiTowerRc;   //!
   TBranch        *b_mContamPairs_;   //!
   //TBranch        *b_mContamPairs_mParentGeantId;   //!
   TBranch        *b_mContamPairs_mGeantProcess;   //!
   TBranch        *b_mContamPairs_mPtMcParent;   //!
   TBranch        *b_mContamPairs_mEtaMcParent;   //!
   TBranch        *b_mContamPairs_mParentParentGeantId;   //!
   TBranch        *b_mContamPairs_mPtMcParentParent;   //!
   TBranch        *b_mContamPairs_mStartX;   //!
   TBranch        *b_mContamPairs_mStartY;   //!
   TBranch        *b_mContamPairs_mStartZ;   //!
   TBranch        *b_mContamPairs_mNCommonHit;   //!
   TBranch        *b_mContamPairs_mIsBestContam;   //!
   TBranch        *b_mContamPairs_mDominatrack;   //!
   TBranch        *b_mContamPairs_mDominCommonHit;   //!
   TBranch        *b_mContamPairs_mAvgQuality;   //!
   TBranch        *b_mContamPairs_mIsValid;   //!
   TBranch        *b_mContamPairs_mPtMc;   //!
   TBranch        *b_mContamPairs_mPzMc;   //!
   TBranch        *b_mContamPairs_mEtaMc;   //!
   TBranch        *b_mContamPairs_mPhiMc;   //!
   TBranch        *b_mContamPairs_mNHitMc;   //!
   TBranch        *b_mContamPairs_mNSvtHitMc;   //!
   TBranch        *b_mContamPairs_mNSsdHitMc;   //!
   TBranch        *b_mContamPairs_mNFtpcHitMc;   //!
   TBranch        *b_mContamPairs_mNBemcHitMc;   //!
   TBranch        *b_mContamPairs_mNBprsHitMc;   //!
   TBranch        *b_mContamPairs_mNBsmdeHitMc;   //!
   TBranch        *b_mContamPairs_mNBsmdpHitMc;   //!
   TBranch        *b_mContamPairs_mNEemcHitMc;   //!
   TBranch        *b_mContamPairs_mNEprsHitMc;   //!
   TBranch        *b_mContamPairs_mNEsmduHitMc;   //!
   TBranch        *b_mContamPairs_mNEsmdvHitMc;   //!
   TBranch        *b_mContamPairs_mGeantId;   //!
   TBranch        *b_mContamPairs_mChargeMc;   //!
   TBranch        *b_mContamPairs_mStopR;   //!
   TBranch        *b_mContamPairs_mKey;   //!
   TBranch        *b_mContamPairs_mParentKey;   //!
   TBranch        *b_mContamPairs_mParentGeantId;   //!
   TBranch        *b_mContamPairs_mEmcEnergyMcHit;   //!
   TBranch        *b_mContamPairs_mEmcEnergyMcSum;   //!
   TBranch        *b_mContamPairs_mEmcSoftIdHiTowerMc;   //!
   TBranch        *b_mContamPairs_mNAssocGl;   //!
   TBranch        *b_mContamPairs_mNAssocPr;   //!
   TBranch        *b_mContamPairs_mIsPrimary;   //!
   TBranch        *b_mContamPairs_fUniqueID;   //!
   TBranch        *b_mContamPairs_fBits;   //!
   TBranch        *b_mContamPairs_mIsValidGl;   //!
   TBranch        *b_mContamPairs_mPtPr;   //!
   TBranch        *b_mContamPairs_mPzPr;   //!
   TBranch        *b_mContamPairs_mEtaPr;   //!
   TBranch        *b_mContamPairs_mPhiPr;   //!
   TBranch        *b_mContamPairs_mDcaPr;   //!
   TBranch        *b_mContamPairs_mDcaXYPr;   //!
   TBranch        *b_mContamPairs_mDcaZPr;   //!
   TBranch        *b_mContamPairs_mDcaXYPrMcV;   //!
   TBranch        *b_mContamPairs_mDcaZPrMcV;   //!
   TBranch        *b_mContamPairs_mCurvPr;   //!
   TBranch        *b_mContamPairs_mTanLPr;   //!
   TBranch        *b_mContamPairs_mErrP;   //!
   TBranch        *b_mContamPairs_mChi2Pr;   //!
   TBranch        *b_mContamPairs_mFlag;   //!
   TBranch        *b_mContamPairs_mDedx;   //!
   TBranch        *b_mContamPairs_mPtGl;   //!
   TBranch        *b_mContamPairs_mPzGl;   //!
   TBranch        *b_mContamPairs_mEtaGl;   //!
   TBranch        *b_mContamPairs_mPhiGl;   //!
   TBranch        *b_mContamPairs_mDcaGl;   //!
   TBranch        *b_mContamPairs_mDcaXYGl;   //!
   TBranch        *b_mContamPairs_mDcaZGl;   //!
   TBranch        *b_mContamPairs_mDcaXYGlMcV;   //!
   TBranch        *b_mContamPairs_mDcaZGlMcV;   //!
   TBranch        *b_mContamPairs_mCurvGl;   //!
   TBranch        *b_mContamPairs_mTanLGl;   //!
   TBranch        *b_mContamPairs_mErrG;   //!
   TBranch        *b_mContamPairs_mPidPion;   //!
   TBranch        *b_mContamPairs_mPidProton;   //!
   TBranch        *b_mContamPairs_mPidKaon;   //!
   TBranch        *b_mContamPairs_mPidElectron;   //!
   TBranch        *b_mContamPairs_mFirstZ;   //!
   TBranch        *b_mContamPairs_mLastZ;   //!
   TBranch        *b_mContamPairs_mFirstPadrow;   //!
   TBranch        *b_mContamPairs_mLastPadrow;   //!
   TBranch        *b_mContamPairs_mFirstFitPadrow;   //!
   TBranch        *b_mContamPairs_mLastFitPadrow;   //!
   TBranch        *b_mContamPairs_mFirstSector;   //!
   TBranch        *b_mContamPairs_mLastSector;   //!
   TBranch        *b_mContamPairs_mRecoKey;   //!
   TBranch        *b_mContamPairs_mFitPts;   //!
   TBranch        *b_mContamPairs_mFitSvt;   //!
   TBranch        *b_mContamPairs_mFitSsd;   //!
   TBranch        *b_mContamPairs_mFitFtpc;   //!
   TBranch        *b_mContamPairs_mDedxPts;   //!
   TBranch        *b_mContamPairs_mAllPts;   //!
   TBranch        *b_mContamPairs_mCharge;   //!
   TBranch        *b_mContamPairs_mNAssocMc;   //!
   TBranch        *b_mContamPairs_mNPossible;   //!
   TBranch        *b_mContamPairs_mIsValidPr;   //!
   TBranch        *b_mContamPairs_mEmcTowerAdc;   //!
   TBranch        *b_mContamPairs_mEmcEnergyRcHit;   //!
   TBranch        *b_mContamPairs_mEmcSoftIdHiTowerRc;   //!
   TBranch        *b_mMatGlobPairs_;   //!
   TBranch        *b_mMatGlobPairs_mNCommonHit;   //!
   TBranch        *b_mMatGlobPairs_mIsBestContam;   //!
   TBranch        *b_mMatGlobPairs_mDominatrack;   //!
   TBranch        *b_mMatGlobPairs_mDominCommonHit;   //!
   TBranch        *b_mMatGlobPairs_mAvgQuality;   //!
   TBranch        *b_mMatGlobPairs_mIsValid;   //!
   TBranch        *b_mMatGlobPairs_mPtMc;   //!
   TBranch        *b_mMatGlobPairs_mPzMc;   //!
   TBranch        *b_mMatGlobPairs_mEtaMc;   //!
   TBranch        *b_mMatGlobPairs_mPhiMc;   //!
   TBranch        *b_mMatGlobPairs_mNHitMc;   //!
   TBranch        *b_mMatGlobPairs_mNSvtHitMc;   //!
   TBranch        *b_mMatGlobPairs_mNSsdHitMc;   //!
   TBranch        *b_mMatGlobPairs_mNFtpcHitMc;   //!
   TBranch        *b_mMatGlobPairs_mNBemcHitMc;   //!
   TBranch        *b_mMatGlobPairs_mNBprsHitMc;   //!
   TBranch        *b_mMatGlobPairs_mNBsmdeHitMc;   //!
   TBranch        *b_mMatGlobPairs_mNBsmdpHitMc;   //!
   TBranch        *b_mMatGlobPairs_mNEemcHitMc;   //!
   TBranch        *b_mMatGlobPairs_mNEprsHitMc;   //!
   TBranch        *b_mMatGlobPairs_mNEsmduHitMc;   //!
   TBranch        *b_mMatGlobPairs_mNEsmdvHitMc;   //!
   TBranch        *b_mMatGlobPairs_mGeantId;   //!
   TBranch        *b_mMatGlobPairs_mChargeMc;   //!
   TBranch        *b_mMatGlobPairs_mStopR;   //!
   TBranch        *b_mMatGlobPairs_mKey;   //!
   TBranch        *b_mMatGlobPairs_mParentKey;   //!
   TBranch        *b_mMatGlobPairs_mParentGeantId;   //!
   TBranch        *b_mMatGlobPairs_mEmcEnergyMcHit;   //!
   TBranch        *b_mMatGlobPairs_mEmcEnergyMcSum;   //!
   TBranch        *b_mMatGlobPairs_mEmcSoftIdHiTowerMc;   //!
   TBranch        *b_mMatGlobPairs_mNAssocGl;   //!
   TBranch        *b_mMatGlobPairs_mNAssocPr;   //!
   TBranch        *b_mMatGlobPairs_mIsPrimary;   //!
   TBranch        *b_mMatGlobPairs_fUniqueID;   //!
   TBranch        *b_mMatGlobPairs_fBits;   //!
   TBranch        *b_mMatGlobPairs_mIsValidGl;   //!
   TBranch        *b_mMatGlobPairs_mPtPr;   //!
   TBranch        *b_mMatGlobPairs_mPzPr;   //!
   TBranch        *b_mMatGlobPairs_mEtaPr;   //!
   TBranch        *b_mMatGlobPairs_mPhiPr;   //!
   TBranch        *b_mMatGlobPairs_mDcaPr;   //!
   TBranch        *b_mMatGlobPairs_mDcaXYPr;   //!
   TBranch        *b_mMatGlobPairs_mDcaZPr;   //!
   TBranch        *b_mMatGlobPairs_mDcaXYPrMcV;   //!
   TBranch        *b_mMatGlobPairs_mDcaZPrMcV;   //!
   TBranch        *b_mMatGlobPairs_mCurvPr;   //!
   TBranch        *b_mMatGlobPairs_mTanLPr;   //!
   TBranch        *b_mMatGlobPairs_mErrP;   //!
   TBranch        *b_mMatGlobPairs_mChi2Pr;   //!
   TBranch        *b_mMatGlobPairs_mFlag;   //!
   TBranch        *b_mMatGlobPairs_mDedx;   //!
   TBranch        *b_mMatGlobPairs_mPtGl;   //!
   TBranch        *b_mMatGlobPairs_mPzGl;   //!
   TBranch        *b_mMatGlobPairs_mEtaGl;   //!
   TBranch        *b_mMatGlobPairs_mPhiGl;   //!
   TBranch        *b_mMatGlobPairs_mDcaGl;   //!
   TBranch        *b_mMatGlobPairs_mDcaXYGl;   //!
   TBranch        *b_mMatGlobPairs_mDcaZGl;   //!
   TBranch        *b_mMatGlobPairs_mDcaXYGlMcV;   //!
   TBranch        *b_mMatGlobPairs_mDcaZGlMcV;   //!
   TBranch        *b_mMatGlobPairs_mCurvGl;   //!
   TBranch        *b_mMatGlobPairs_mTanLGl;   //!
   TBranch        *b_mMatGlobPairs_mErrG;   //!
   TBranch        *b_mMatGlobPairs_mPidPion;   //!
   TBranch        *b_mMatGlobPairs_mPidProton;   //!
   TBranch        *b_mMatGlobPairs_mPidKaon;   //!
   TBranch        *b_mMatGlobPairs_mPidElectron;   //!
   TBranch        *b_mMatGlobPairs_mFirstZ;   //!
   TBranch        *b_mMatGlobPairs_mLastZ;   //!
   TBranch        *b_mMatGlobPairs_mFirstPadrow;   //!
   TBranch        *b_mMatGlobPairs_mLastPadrow;   //!
   TBranch        *b_mMatGlobPairs_mFirstFitPadrow;   //!
   TBranch        *b_mMatGlobPairs_mLastFitPadrow;   //!
   TBranch        *b_mMatGlobPairs_mFirstSector;   //!
   TBranch        *b_mMatGlobPairs_mLastSector;   //!
   TBranch        *b_mMatGlobPairs_mRecoKey;   //!
   TBranch        *b_mMatGlobPairs_mFitPts;   //!
   TBranch        *b_mMatGlobPairs_mFitSvt;   //!
   TBranch        *b_mMatGlobPairs_mFitSsd;   //!
   TBranch        *b_mMatGlobPairs_mFitFtpc;   //!
   TBranch        *b_mMatGlobPairs_mDedxPts;   //!
   TBranch        *b_mMatGlobPairs_mAllPts;   //!
   TBranch        *b_mMatGlobPairs_mCharge;   //!
   TBranch        *b_mMatGlobPairs_mNAssocMc;   //!
   TBranch        *b_mMatGlobPairs_mNPossible;   //!
   TBranch        *b_mMatGlobPairs_mIsValidPr;   //!
   TBranch        *b_mMatGlobPairs_mEmcTowerAdc;   //!
   TBranch        *b_mMatGlobPairs_mEmcEnergyRcHit;   //!
   TBranch        *b_mMatGlobPairs_mEmcSoftIdHiTowerRc;   //!
   TBranch        *b_StMiniMcEvent_fUniqueID;   //!
   TBranch        *b_StMiniMcEvent_fBits;   //!

   StMiniMcTree(TTree *tree=0);
   virtual ~StMiniMcTree();
   virtual Int_t    Cut(Long64_t entry);
   virtual Int_t    GetEntry(Long64_t entry);
   virtual Long64_t LoadTree(Long64_t entry);
   virtual void     Init(TTree *tree);
   virtual void     Loop();
   virtual Bool_t   Notify();
   virtual void     Show(Long64_t entry = -1);
};

#endif

StMiniMcTree::StMiniMcTree(TTree *tree)
{
// if parameter tree is not specified (or zero), connect the file
// used to generate this class and read the Tree.
   if (tree == 0) {
     TString flist=gSystem->Getenv("FILELIST");
		  /*
#ifdef SINGLE_TREE
     
     TFile *f = (TFile*)gROOT->GetListOfFiles()->FindObject("mix03.minimc.root");
     if (!f) {
       f = new TFile("mix03.minimc.root");
     }
     tree = (TTree*)gDirectory->Get("StMiniMcTree");
     
#else // SINGLE_TREE
    
      // The following code should be used if you want this class to access a chain
      // of trees.*/
     TChain * chain = new TChain("StMiniMcTree","");
     ifstream mylist;
     //mylist.open("/star/u/rusnak/institutions/HFT/LambdaC/minimc/filelist.list");
     mylist.open(flist);
     TString t;  
     while(1)
       {
         mylist >> t;
         if(!mylist.good())break;
         TString ext ="/StMiniMcTree";
         TString currFile = t+ext;
         //chain->Add(t);
         cout <<" file is " << currFile << endl; 
         chain->Add(currFile);
       }
     tree = chain;
//#endif // SINGLE_TREE
   }
   Init(tree);
}

//#ifdef StMiniMcTree_cxx
//StMiniMcTree::StMiniMcTree(TTree *tree)
//{
// if parameter tree is not specified (or zero), connect the file
// used to generate this class and read the Tree.
//   if (tree == 0) {
//      TFile *f = (TFile*)gROOT->GetListOfFiles()->FindObject("/eliza15/star/starprod/embedding/2007ProductionMinBias/D0_220_1234306453/P08ic.SL08f/2007/125/st_physics_8125012_raw_1010004.minimc.root");
//      if (!f) {
//         f = new TFile("/eliza15/star/starprod/embedding/2007ProductionMinBias/D0_220_1234306453/P08ic.SL08f/2007/125/st_physics_8125012_raw_1010004.minimc.root");
//      }
//      tree = (TTree*)gDirectory->Get("StMiniMcTree");
//
//   }
//   Init(tree);
//}

StMiniMcTree::~StMiniMcTree()
{
   if (!fChain) return;
   delete fChain->GetCurrentFile();
}

Int_t StMiniMcTree::GetEntry(Long64_t entry)
{
// Read contents of entry.
   if (!fChain) return 0;
   return fChain->GetEntry(entry);
}
Long64_t StMiniMcTree::LoadTree(Long64_t entry)
{
// Set the environment to read one entry
   if (!fChain) return -5;
   Long64_t centry = fChain->LoadTree(entry);
   if (centry < 0) return centry;
   if (!fChain->InheritsFrom(TChain::Class()))  return centry;
   TChain *chain = (TChain*)fChain;
   if (chain->GetTreeNumber() != fCurrent) {
      fCurrent = chain->GetTreeNumber();
      Notify();
   }
   return centry;
}

void StMiniMcTree::Init(TTree *tree)
{
   // The Init() function is called when the selector needs to initialize
   // a new tree or chain. Typically here the branch addresses and branch
   // pointers of the tree will be set.
   // It is normally not necessary to make changes to the generated
   // code, but the routine can be extended by the user if needed.
   // Init() will be called many times when running on PROOF
   // (once per file to be processed).

   // Set branch addresses and branch pointers
   if (!tree) return;
   fChain = tree;
   fCurrent = -1;
   fChain->SetMakeClass(1);

   fChain->SetBranchAddress("mEventId", &mEventId, &b_StMiniMcEvent_mEventId);
   fChain->SetBranchAddress("mRunId", &mRunId, &b_StMiniMcEvent_mRunId);
   fChain->SetBranchAddress("mOriginMult", &mOriginMult, &b_StMiniMcEvent_mOriginMult);
   fChain->SetBranchAddress("mCentralMult", &mCentralMult, &b_StMiniMcEvent_mCentralMult);
   fChain->SetBranchAddress("mCentrality", &mCentrality, &b_StMiniMcEvent_mCentrality);
   fChain->SetBranchAddress("mNUncorrectedNegativePrimaries", &mNUncorrectedNegativePrimaries, &b_StMiniMcEvent_mNUncorrectedNegativePrimaries);
   fChain->SetBranchAddress("mNUncorrectedPrimaries", &mNUncorrectedPrimaries, &b_StMiniMcEvent_mNUncorrectedPrimaries);
   fChain->SetBranchAddress("mNFtpcWUncorrectedPrimaries", &mNFtpcWUncorrectedPrimaries, &b_StMiniMcEvent_mNFtpcWUncorrectedPrimaries);
   fChain->SetBranchAddress("mNFtpcEUncorrectedPrimaries", &mNFtpcEUncorrectedPrimaries, &b_StMiniMcEvent_mNFtpcEUncorrectedPrimaries);
   fChain->SetBranchAddress("mMcMult", &mMcMult, &b_StMiniMcEvent_mMcMult);
   fChain->SetBranchAddress("mNMcNch", &mNMcNch, &b_StMiniMcEvent_mNMcNch);
   fChain->SetBranchAddress("mNMcFtpcWNch", &mNMcFtpcWNch, &b_StMiniMcEvent_mNMcFtpcWNch);
   fChain->SetBranchAddress("mNMcFtpcENch", &mNMcFtpcENch, &b_StMiniMcEvent_mNMcFtpcENch);
   fChain->SetBranchAddress("mNMcHminus", &mNMcHminus, &b_StMiniMcEvent_mNMcHminus);
   fChain->SetBranchAddress("mNMcGlobal", &mNMcGlobal, &b_StMiniMcEvent_mNMcGlobal);
   fChain->SetBranchAddress("mNMcGoodGlobal20", &mNMcGoodGlobal20, &b_StMiniMcEvent_mNMcGoodGlobal20);
   fChain->SetBranchAddress("mNRcGlobal", &mNRcGlobal, &b_StMiniMcEvent_mNRcGlobal);
   fChain->SetBranchAddress("mNRcGoodGlobal20", &mNRcGoodGlobal20, &b_StMiniMcEvent_mNRcGoodGlobal20);
   fChain->SetBranchAddress("mVertexX", &mVertexX, &b_StMiniMcEvent_mVertexX);
   fChain->SetBranchAddress("mVertexY", &mVertexY, &b_StMiniMcEvent_mVertexY);
   fChain->SetBranchAddress("mVertexZ", &mVertexZ, &b_StMiniMcEvent_mVertexZ);
   fChain->SetBranchAddress("mVertexCovMatrix[6]", mVertexCovMatrix, &b_StMiniMcEvent_mVertexCovMatrix);
   fChain->SetBranchAddress("mMcVertexX", &mMcVertexX, &b_StMiniMcEvent_mMcVertexX);
   fChain->SetBranchAddress("mMcVertexY", &mMcVertexY, &b_StMiniMcEvent_mMcVertexY);
   fChain->SetBranchAddress("mMcVertexZ", &mMcVertexZ, &b_StMiniMcEvent_mMcVertexZ);
   fChain->SetBranchAddress("mMagField", &mMagField, &b_StMiniMcEvent_mMagField);
   fChain->SetBranchAddress("mCenterOfMassEnergy", &mCenterOfMassEnergy, &b_StMiniMcEvent_mCenterOfMassEnergy);
   fChain->SetBranchAddress("mBackgroundRate", &mBackgroundRate, &b_StMiniMcEvent_mBackgroundRate);
   fChain->SetBranchAddress("mBeamMassNumberEast", &mBeamMassNumberEast, &b_StMiniMcEvent_mBeamMassNumberEast);
   fChain->SetBranchAddress("mBeamMassNumberWest", &mBeamMassNumberWest, &b_StMiniMcEvent_mBeamMassNumberWest);
   fChain->SetBranchAddress("mCtb", &mCtb, &b_StMiniMcEvent_mCtb);
   fChain->SetBranchAddress("mZdcE", &mZdcE, &b_StMiniMcEvent_mZdcE);
   fChain->SetBranchAddress("mZdcW", &mZdcW, &b_StMiniMcEvent_mZdcW);
   fChain->SetBranchAddress("mNMcTrack", &mNMcTrack, &b_StMiniMcEvent_mNMcTrack);
   fChain->SetBranchAddress("mNMatchedPair", &mNMatchedPair, &b_StMiniMcEvent_mNMatchedPair);
   fChain->SetBranchAddress("mNMergedPair", &mNMergedPair, &b_StMiniMcEvent_mNMergedPair);
   fChain->SetBranchAddress("mNSplitPair", &mNSplitPair, &b_StMiniMcEvent_mNSplitPair);
   fChain->SetBranchAddress("mNGhostPair", &mNGhostPair, &b_StMiniMcEvent_mNGhostPair);
   fChain->SetBranchAddress("mNContamPair", &mNContamPair, &b_StMiniMcEvent_mNContamPair);
   fChain->SetBranchAddress("mNMatGlobPair", &mNMatGlobPair, &b_StMiniMcEvent_mNMatGlobPair);
   fChain->SetBranchAddress("mMcTracks_", &mMcTracks_, &b_mMcTracks_);
   fChain->SetBranchAddress("mMcTracks.mIsValid", mMcTracks_mIsValid, &b_mMcTracks_mIsValid);
   fChain->SetBranchAddress("mMcTracks.mPtMc", mMcTracks_mPtMc, &b_mMcTracks_mPtMc);
   fChain->SetBranchAddress("mMcTracks.mPzMc", mMcTracks_mPzMc, &b_mMcTracks_mPzMc);
   fChain->SetBranchAddress("mMcTracks.mEtaMc", mMcTracks_mEtaMc, &b_mMcTracks_mEtaMc);
   fChain->SetBranchAddress("mMcTracks.mPhiMc", mMcTracks_mPhiMc, &b_mMcTracks_mPhiMc);
   fChain->SetBranchAddress("mMcTracks.mNHitMc", mMcTracks_mNHitMc, &b_mMcTracks_mNHitMc);
   fChain->SetBranchAddress("mMcTracks.mNSvtHitMc", mMcTracks_mNSvtHitMc, &b_mMcTracks_mNSvtHitMc);
   fChain->SetBranchAddress("mMcTracks.mNSsdHitMc", mMcTracks_mNSsdHitMc, &b_mMcTracks_mNSsdHitMc);
   fChain->SetBranchAddress("mMcTracks.mNFtpcHitMc", mMcTracks_mNFtpcHitMc, &b_mMcTracks_mNFtpcHitMc);
   fChain->SetBranchAddress("mMcTracks.mNBemcHitMc", mMcTracks_mNBemcHitMc, &b_mMcTracks_mNBemcHitMc);
   fChain->SetBranchAddress("mMcTracks.mNBprsHitMc", mMcTracks_mNBprsHitMc, &b_mMcTracks_mNBprsHitMc);
   fChain->SetBranchAddress("mMcTracks.mNBsmdeHitMc", mMcTracks_mNBsmdeHitMc, &b_mMcTracks_mNBsmdeHitMc);
   fChain->SetBranchAddress("mMcTracks.mNBsmdpHitMc", mMcTracks_mNBsmdpHitMc, &b_mMcTracks_mNBsmdpHitMc);
   fChain->SetBranchAddress("mMcTracks.mNEemcHitMc", mMcTracks_mNEemcHitMc, &b_mMcTracks_mNEemcHitMc);
   fChain->SetBranchAddress("mMcTracks.mNEprsHitMc", mMcTracks_mNEprsHitMc, &b_mMcTracks_mNEprsHitMc);
   fChain->SetBranchAddress("mMcTracks.mNEsmduHitMc", mMcTracks_mNEsmduHitMc, &b_mMcTracks_mNEsmduHitMc);
   fChain->SetBranchAddress("mMcTracks.mNEsmdvHitMc", mMcTracks_mNEsmdvHitMc, &b_mMcTracks_mNEsmdvHitMc);
   fChain->SetBranchAddress("mMcTracks.mGeantId", mMcTracks_mGeantId, &b_mMcTracks_mGeantId);
   fChain->SetBranchAddress("mMcTracks.mChargeMc", mMcTracks_mChargeMc, &b_mMcTracks_mChargeMc);
   fChain->SetBranchAddress("mMcTracks.mStopR", mMcTracks_mStopR, &b_mMcTracks_mStopR);
   fChain->SetBranchAddress("mMcTracks.mKey", mMcTracks_mKey, &b_mMcTracks_mKey);
   fChain->SetBranchAddress("mMcTracks.mParentKey", mMcTracks_mParentKey, &b_mMcTracks_mParentKey);
   fChain->SetBranchAddress("mMcTracks.mParentGeantId", mMcTracks_mParentGeantId, &b_mMcTracks_mParentGeantId);
   fChain->SetBranchAddress("mMcTracks.mEmcEnergyMcHit[3]", mMcTracks_mEmcEnergyMcHit, &b_mMcTracks_mEmcEnergyMcHit);
   fChain->SetBranchAddress("mMcTracks.mEmcEnergyMcSum", mMcTracks_mEmcEnergyMcSum, &b_mMcTracks_mEmcEnergyMcSum);
   fChain->SetBranchAddress("mMcTracks.mEmcSoftIdHiTowerMc[3]", mMcTracks_mEmcSoftIdHiTowerMc, &b_mMcTracks_mEmcSoftIdHiTowerMc);
   fChain->SetBranchAddress("mMcTracks.mNAssocGl", mMcTracks_mNAssocGl, &b_mMcTracks_mNAssocGl);
   fChain->SetBranchAddress("mMcTracks.mNAssocPr", mMcTracks_mNAssocPr, &b_mMcTracks_mNAssocPr);
   fChain->SetBranchAddress("mMcTracks.mIsPrimary", mMcTracks_mIsPrimary, &b_mMcTracks_mIsPrimary);
   fChain->SetBranchAddress("mMcTracks.fUniqueID", mMcTracks_fUniqueID, &b_mMcTracks_fUniqueID);
   fChain->SetBranchAddress("mMcTracks.fBits", mMcTracks_fBits, &b_mMcTracks_fBits);
   fChain->SetBranchAddress("mMatchedPairs_", &mMatchedPairs_, &b_mMatchedPairs_);
   fChain->SetBranchAddress("mMatchedPairs.mNCommonHit", mMatchedPairs_mNCommonHit, &b_mMatchedPairs_mNCommonHit);
   fChain->SetBranchAddress("mMatchedPairs.mIsBestContam", mMatchedPairs_mIsBestContam, &b_mMatchedPairs_mIsBestContam);
   fChain->SetBranchAddress("mMatchedPairs.mDominatrack", mMatchedPairs_mDominatrack, &b_mMatchedPairs_mDominatrack);
   fChain->SetBranchAddress("mMatchedPairs.mDominCommonHit", mMatchedPairs_mDominCommonHit, &b_mMatchedPairs_mDominCommonHit);
   fChain->SetBranchAddress("mMatchedPairs.mAvgQuality", mMatchedPairs_mAvgQuality, &b_mMatchedPairs_mAvgQuality);
   fChain->SetBranchAddress("mMatchedPairs.mIsValid", mMatchedPairs_mIsValid, &b_mMatchedPairs_mIsValid);
   fChain->SetBranchAddress("mMatchedPairs.mPtMc", mMatchedPairs_mPtMc, &b_mMatchedPairs_mPtMc);
   fChain->SetBranchAddress("mMatchedPairs.mPzMc", mMatchedPairs_mPzMc, &b_mMatchedPairs_mPzMc);
   fChain->SetBranchAddress("mMatchedPairs.mEtaMc", mMatchedPairs_mEtaMc, &b_mMatchedPairs_mEtaMc);
   fChain->SetBranchAddress("mMatchedPairs.mPhiMc", mMatchedPairs_mPhiMc, &b_mMatchedPairs_mPhiMc);
   fChain->SetBranchAddress("mMatchedPairs.mNHitMc", mMatchedPairs_mNHitMc, &b_mMatchedPairs_mNHitMc);
   fChain->SetBranchAddress("mMatchedPairs.mNSvtHitMc", mMatchedPairs_mNSvtHitMc, &b_mMatchedPairs_mNSvtHitMc);
   fChain->SetBranchAddress("mMatchedPairs.mNSsdHitMc", mMatchedPairs_mNSsdHitMc, &b_mMatchedPairs_mNSsdHitMc);
   fChain->SetBranchAddress("mMatchedPairs.mNFtpcHitMc", mMatchedPairs_mNFtpcHitMc, &b_mMatchedPairs_mNFtpcHitMc);
   fChain->SetBranchAddress("mMatchedPairs.mNBemcHitMc", mMatchedPairs_mNBemcHitMc, &b_mMatchedPairs_mNBemcHitMc);
   fChain->SetBranchAddress("mMatchedPairs.mNBprsHitMc", mMatchedPairs_mNBprsHitMc, &b_mMatchedPairs_mNBprsHitMc);
   fChain->SetBranchAddress("mMatchedPairs.mNBsmdeHitMc", mMatchedPairs_mNBsmdeHitMc, &b_mMatchedPairs_mNBsmdeHitMc);
   fChain->SetBranchAddress("mMatchedPairs.mNBsmdpHitMc", mMatchedPairs_mNBsmdpHitMc, &b_mMatchedPairs_mNBsmdpHitMc);
   fChain->SetBranchAddress("mMatchedPairs.mNEemcHitMc", mMatchedPairs_mNEemcHitMc, &b_mMatchedPairs_mNEemcHitMc);
   fChain->SetBranchAddress("mMatchedPairs.mNEprsHitMc", mMatchedPairs_mNEprsHitMc, &b_mMatchedPairs_mNEprsHitMc);
   fChain->SetBranchAddress("mMatchedPairs.mNEsmduHitMc", mMatchedPairs_mNEsmduHitMc, &b_mMatchedPairs_mNEsmduHitMc);
   fChain->SetBranchAddress("mMatchedPairs.mNEsmdvHitMc", mMatchedPairs_mNEsmdvHitMc, &b_mMatchedPairs_mNEsmdvHitMc);
   fChain->SetBranchAddress("mMatchedPairs.mGeantId", mMatchedPairs_mGeantId, &b_mMatchedPairs_mGeantId);
   fChain->SetBranchAddress("mMatchedPairs.mChargeMc", mMatchedPairs_mChargeMc, &b_mMatchedPairs_mChargeMc);
   fChain->SetBranchAddress("mMatchedPairs.mStopR", mMatchedPairs_mStopR, &b_mMatchedPairs_mStopR);
   fChain->SetBranchAddress("mMatchedPairs.mKey", mMatchedPairs_mKey, &b_mMatchedPairs_mKey);
   fChain->SetBranchAddress("mMatchedPairs.mParentKey", mMatchedPairs_mParentKey, &b_mMatchedPairs_mParentKey);
   fChain->SetBranchAddress("mMatchedPairs.mParentGeantId", mMatchedPairs_mParentGeantId, &b_mMatchedPairs_mParentGeantId);
   fChain->SetBranchAddress("mMatchedPairs.mEmcEnergyMcHit[3]", mMatchedPairs_mEmcEnergyMcHit, &b_mMatchedPairs_mEmcEnergyMcHit);
   fChain->SetBranchAddress("mMatchedPairs.mEmcEnergyMcSum", mMatchedPairs_mEmcEnergyMcSum, &b_mMatchedPairs_mEmcEnergyMcSum);
   fChain->SetBranchAddress("mMatchedPairs.mEmcSoftIdHiTowerMc[3]", mMatchedPairs_mEmcSoftIdHiTowerMc, &b_mMatchedPairs_mEmcSoftIdHiTowerMc);
   fChain->SetBranchAddress("mMatchedPairs.mNAssocGl", mMatchedPairs_mNAssocGl, &b_mMatchedPairs_mNAssocGl);
   fChain->SetBranchAddress("mMatchedPairs.mNAssocPr", mMatchedPairs_mNAssocPr, &b_mMatchedPairs_mNAssocPr);
   fChain->SetBranchAddress("mMatchedPairs.mIsPrimary", mMatchedPairs_mIsPrimary, &b_mMatchedPairs_mIsPrimary);
   fChain->SetBranchAddress("mMatchedPairs.fUniqueID", mMatchedPairs_fUniqueID, &b_mMatchedPairs_fUniqueID);
   fChain->SetBranchAddress("mMatchedPairs.fBits", mMatchedPairs_fBits, &b_mMatchedPairs_fBits);
   fChain->SetBranchAddress("mMatchedPairs.mIsValidGl", mMatchedPairs_mIsValidGl, &b_mMatchedPairs_mIsValidGl);
   fChain->SetBranchAddress("mMatchedPairs.mPtPr", mMatchedPairs_mPtPr, &b_mMatchedPairs_mPtPr);
   fChain->SetBranchAddress("mMatchedPairs.mPzPr", mMatchedPairs_mPzPr, &b_mMatchedPairs_mPzPr);
   fChain->SetBranchAddress("mMatchedPairs.mEtaPr", mMatchedPairs_mEtaPr, &b_mMatchedPairs_mEtaPr);
   fChain->SetBranchAddress("mMatchedPairs.mPhiPr", mMatchedPairs_mPhiPr, &b_mMatchedPairs_mPhiPr);
   fChain->SetBranchAddress("mMatchedPairs.mDcaPr", mMatchedPairs_mDcaPr, &b_mMatchedPairs_mDcaPr);
   fChain->SetBranchAddress("mMatchedPairs.mDcaXYPr", mMatchedPairs_mDcaXYPr, &b_mMatchedPairs_mDcaXYPr);
   fChain->SetBranchAddress("mMatchedPairs.mDcaZPr", mMatchedPairs_mDcaZPr, &b_mMatchedPairs_mDcaZPr);
   fChain->SetBranchAddress("mMatchedPairs.mDcaXYPrMcV", mMatchedPairs_mDcaXYPrMcV, &b_mMatchedPairs_mDcaXYPrMcV);
   fChain->SetBranchAddress("mMatchedPairs.mDcaZPrMcV", mMatchedPairs_mDcaZPrMcV, &b_mMatchedPairs_mDcaZPrMcV);
   fChain->SetBranchAddress("mMatchedPairs.mCurvPr", mMatchedPairs_mCurvPr, &b_mMatchedPairs_mCurvPr);
   fChain->SetBranchAddress("mMatchedPairs.mTanLPr", mMatchedPairs_mTanLPr, &b_mMatchedPairs_mTanLPr);
   fChain->SetBranchAddress("mMatchedPairs.mErrP[5]", mMatchedPairs_mErrP, &b_mMatchedPairs_mErrP);
   fChain->SetBranchAddress("mMatchedPairs.mChi2Pr", mMatchedPairs_mChi2Pr, &b_mMatchedPairs_mChi2Pr);
   fChain->SetBranchAddress("mMatchedPairs.mFlag", mMatchedPairs_mFlag, &b_mMatchedPairs_mFlag);
   fChain->SetBranchAddress("mMatchedPairs.mDedx", mMatchedPairs_mDedx, &b_mMatchedPairs_mDedx);
   fChain->SetBranchAddress("mMatchedPairs.mPtGl", mMatchedPairs_mPtGl, &b_mMatchedPairs_mPtGl);
   fChain->SetBranchAddress("mMatchedPairs.mPzGl", mMatchedPairs_mPzGl, &b_mMatchedPairs_mPzGl);
   fChain->SetBranchAddress("mMatchedPairs.mEtaGl", mMatchedPairs_mEtaGl, &b_mMatchedPairs_mEtaGl);
   fChain->SetBranchAddress("mMatchedPairs.mPhiGl", mMatchedPairs_mPhiGl, &b_mMatchedPairs_mPhiGl);
   fChain->SetBranchAddress("mMatchedPairs.mDcaGl", mMatchedPairs_mDcaGl, &b_mMatchedPairs_mDcaGl);
   fChain->SetBranchAddress("mMatchedPairs.mDcaXYGl", mMatchedPairs_mDcaXYGl, &b_mMatchedPairs_mDcaXYGl);
   fChain->SetBranchAddress("mMatchedPairs.mDcaZGl", mMatchedPairs_mDcaZGl, &b_mMatchedPairs_mDcaZGl);
   fChain->SetBranchAddress("mMatchedPairs.mDcaXYGlMcV", mMatchedPairs_mDcaXYGlMcV, &b_mMatchedPairs_mDcaXYGlMcV);
   fChain->SetBranchAddress("mMatchedPairs.mDcaZGlMcV", mMatchedPairs_mDcaZGlMcV, &b_mMatchedPairs_mDcaZGlMcV);
   fChain->SetBranchAddress("mMatchedPairs.mCurvGl", mMatchedPairs_mCurvGl, &b_mMatchedPairs_mCurvGl);
   fChain->SetBranchAddress("mMatchedPairs.mTanLGl", mMatchedPairs_mTanLGl, &b_mMatchedPairs_mTanLGl);
   fChain->SetBranchAddress("mMatchedPairs.mErrG[5]", mMatchedPairs_mErrG, &b_mMatchedPairs_mErrG);
   fChain->SetBranchAddress("mMatchedPairs.mPidPion", mMatchedPairs_mPidPion, &b_mMatchedPairs_mPidPion);
   fChain->SetBranchAddress("mMatchedPairs.mPidProton", mMatchedPairs_mPidProton, &b_mMatchedPairs_mPidProton);
   fChain->SetBranchAddress("mMatchedPairs.mPidKaon", mMatchedPairs_mPidKaon, &b_mMatchedPairs_mPidKaon);
   fChain->SetBranchAddress("mMatchedPairs.mPidElectron", mMatchedPairs_mPidElectron, &b_mMatchedPairs_mPidElectron);
   fChain->SetBranchAddress("mMatchedPairs.mFirstZ", mMatchedPairs_mFirstZ, &b_mMatchedPairs_mFirstZ);
   fChain->SetBranchAddress("mMatchedPairs.mLastZ", mMatchedPairs_mLastZ, &b_mMatchedPairs_mLastZ);
   fChain->SetBranchAddress("mMatchedPairs.mFirstPadrow", mMatchedPairs_mFirstPadrow, &b_mMatchedPairs_mFirstPadrow);
   fChain->SetBranchAddress("mMatchedPairs.mLastPadrow", mMatchedPairs_mLastPadrow, &b_mMatchedPairs_mLastPadrow);
   fChain->SetBranchAddress("mMatchedPairs.mFirstFitPadrow", mMatchedPairs_mFirstFitPadrow, &b_mMatchedPairs_mFirstFitPadrow);
   fChain->SetBranchAddress("mMatchedPairs.mLastFitPadrow", mMatchedPairs_mLastFitPadrow, &b_mMatchedPairs_mLastFitPadrow);
   fChain->SetBranchAddress("mMatchedPairs.mFirstSector", mMatchedPairs_mFirstSector, &b_mMatchedPairs_mFirstSector);
   fChain->SetBranchAddress("mMatchedPairs.mLastSector", mMatchedPairs_mLastSector, &b_mMatchedPairs_mLastSector);
   fChain->SetBranchAddress("mMatchedPairs.mRecoKey", mMatchedPairs_mRecoKey, &b_mMatchedPairs_mRecoKey);
   fChain->SetBranchAddress("mMatchedPairs.mFitPts", mMatchedPairs_mFitPts, &b_mMatchedPairs_mFitPts);
   fChain->SetBranchAddress("mMatchedPairs.mFitSvt", mMatchedPairs_mFitSvt, &b_mMatchedPairs_mFitSvt);
   fChain->SetBranchAddress("mMatchedPairs.mFitSsd", mMatchedPairs_mFitSsd, &b_mMatchedPairs_mFitSsd);
   fChain->SetBranchAddress("mMatchedPairs.mFitFtpc", mMatchedPairs_mFitFtpc, &b_mMatchedPairs_mFitFtpc);
   fChain->SetBranchAddress("mMatchedPairs.mDedxPts", mMatchedPairs_mDedxPts, &b_mMatchedPairs_mDedxPts);
   fChain->SetBranchAddress("mMatchedPairs.mAllPts", mMatchedPairs_mAllPts, &b_mMatchedPairs_mAllPts);
   fChain->SetBranchAddress("mMatchedPairs.mCharge", mMatchedPairs_mCharge, &b_mMatchedPairs_mCharge);
   fChain->SetBranchAddress("mMatchedPairs.mNAssocMc", mMatchedPairs_mNAssocMc, &b_mMatchedPairs_mNAssocMc);
   fChain->SetBranchAddress("mMatchedPairs.mNPossible", mMatchedPairs_mNPossible, &b_mMatchedPairs_mNPossible);
   fChain->SetBranchAddress("mMatchedPairs.mIsValidPr", mMatchedPairs_mIsValidPr, &b_mMatchedPairs_mIsValidPr);
   fChain->SetBranchAddress("mMatchedPairs.mEmcTowerAdc[3]", mMatchedPairs_mEmcTowerAdc, &b_mMatchedPairs_mEmcTowerAdc);
   fChain->SetBranchAddress("mMatchedPairs.mEmcEnergyRcHit[3]", mMatchedPairs_mEmcEnergyRcHit, &b_mMatchedPairs_mEmcEnergyRcHit);
   fChain->SetBranchAddress("mMatchedPairs.mEmcSoftIdHiTowerRc[3]", mMatchedPairs_mEmcSoftIdHiTowerRc, &b_mMatchedPairs_mEmcSoftIdHiTowerRc);
   fChain->SetBranchAddress("mMergedPairs_", &mMergedPairs_, &b_mMergedPairs_);
   fChain->SetBranchAddress("mMergedPairs.mNCommonHit", &mMergedPairs_mNCommonHit, &b_mMergedPairs_mNCommonHit);
   fChain->SetBranchAddress("mMergedPairs.mIsBestContam", &mMergedPairs_mIsBestContam, &b_mMergedPairs_mIsBestContam);
   fChain->SetBranchAddress("mMergedPairs.mDominatrack", &mMergedPairs_mDominatrack, &b_mMergedPairs_mDominatrack);
   fChain->SetBranchAddress("mMergedPairs.mDominCommonHit", &mMergedPairs_mDominCommonHit, &b_mMergedPairs_mDominCommonHit);
   fChain->SetBranchAddress("mMergedPairs.mAvgQuality", &mMergedPairs_mAvgQuality, &b_mMergedPairs_mAvgQuality);
   fChain->SetBranchAddress("mMergedPairs.mIsValid", &mMergedPairs_mIsValid, &b_mMergedPairs_mIsValid);
   fChain->SetBranchAddress("mMergedPairs.mPtMc", &mMergedPairs_mPtMc, &b_mMergedPairs_mPtMc);
   fChain->SetBranchAddress("mMergedPairs.mPzMc", &mMergedPairs_mPzMc, &b_mMergedPairs_mPzMc);
   fChain->SetBranchAddress("mMergedPairs.mEtaMc", &mMergedPairs_mEtaMc, &b_mMergedPairs_mEtaMc);
   fChain->SetBranchAddress("mMergedPairs.mPhiMc", &mMergedPairs_mPhiMc, &b_mMergedPairs_mPhiMc);
   fChain->SetBranchAddress("mMergedPairs.mNHitMc", &mMergedPairs_mNHitMc, &b_mMergedPairs_mNHitMc);
   fChain->SetBranchAddress("mMergedPairs.mNSvtHitMc", &mMergedPairs_mNSvtHitMc, &b_mMergedPairs_mNSvtHitMc);
   fChain->SetBranchAddress("mMergedPairs.mNSsdHitMc", &mMergedPairs_mNSsdHitMc, &b_mMergedPairs_mNSsdHitMc);
   fChain->SetBranchAddress("mMergedPairs.mNFtpcHitMc", &mMergedPairs_mNFtpcHitMc, &b_mMergedPairs_mNFtpcHitMc);
   fChain->SetBranchAddress("mMergedPairs.mNBemcHitMc", &mMergedPairs_mNBemcHitMc, &b_mMergedPairs_mNBemcHitMc);
   fChain->SetBranchAddress("mMergedPairs.mNBprsHitMc", &mMergedPairs_mNBprsHitMc, &b_mMergedPairs_mNBprsHitMc);
   fChain->SetBranchAddress("mMergedPairs.mNBsmdeHitMc", &mMergedPairs_mNBsmdeHitMc, &b_mMergedPairs_mNBsmdeHitMc);
   fChain->SetBranchAddress("mMergedPairs.mNBsmdpHitMc", &mMergedPairs_mNBsmdpHitMc, &b_mMergedPairs_mNBsmdpHitMc);
   fChain->SetBranchAddress("mMergedPairs.mNEemcHitMc", &mMergedPairs_mNEemcHitMc, &b_mMergedPairs_mNEemcHitMc);
   fChain->SetBranchAddress("mMergedPairs.mNEprsHitMc", &mMergedPairs_mNEprsHitMc, &b_mMergedPairs_mNEprsHitMc);
   fChain->SetBranchAddress("mMergedPairs.mNEsmduHitMc", &mMergedPairs_mNEsmduHitMc, &b_mMergedPairs_mNEsmduHitMc);
   fChain->SetBranchAddress("mMergedPairs.mNEsmdvHitMc", &mMergedPairs_mNEsmdvHitMc, &b_mMergedPairs_mNEsmdvHitMc);
   fChain->SetBranchAddress("mMergedPairs.mGeantId", &mMergedPairs_mGeantId, &b_mMergedPairs_mGeantId);
   fChain->SetBranchAddress("mMergedPairs.mChargeMc", &mMergedPairs_mChargeMc, &b_mMergedPairs_mChargeMc);
   fChain->SetBranchAddress("mMergedPairs.mStopR", &mMergedPairs_mStopR, &b_mMergedPairs_mStopR);
   fChain->SetBranchAddress("mMergedPairs.mKey", &mMergedPairs_mKey, &b_mMergedPairs_mKey);
   fChain->SetBranchAddress("mMergedPairs.mParentKey", &mMergedPairs_mParentKey, &b_mMergedPairs_mParentKey);
   fChain->SetBranchAddress("mMergedPairs.mParentGeantId", &mMergedPairs_mParentGeantId, &b_mMergedPairs_mParentGeantId);
   fChain->SetBranchAddress("mMergedPairs.mEmcEnergyMcHit[3]", &mMergedPairs_mEmcEnergyMcHit, &b_mMergedPairs_mEmcEnergyMcHit);
   fChain->SetBranchAddress("mMergedPairs.mEmcEnergyMcSum", &mMergedPairs_mEmcEnergyMcSum, &b_mMergedPairs_mEmcEnergyMcSum);
   fChain->SetBranchAddress("mMergedPairs.mEmcSoftIdHiTowerMc[3]", &mMergedPairs_mEmcSoftIdHiTowerMc, &b_mMergedPairs_mEmcSoftIdHiTowerMc);
   fChain->SetBranchAddress("mMergedPairs.mNAssocGl", &mMergedPairs_mNAssocGl, &b_mMergedPairs_mNAssocGl);
   fChain->SetBranchAddress("mMergedPairs.mNAssocPr", &mMergedPairs_mNAssocPr, &b_mMergedPairs_mNAssocPr);
   fChain->SetBranchAddress("mMergedPairs.mIsPrimary", &mMergedPairs_mIsPrimary, &b_mMergedPairs_mIsPrimary);
   fChain->SetBranchAddress("mMergedPairs.fUniqueID", &mMergedPairs_fUniqueID, &b_mMergedPairs_fUniqueID);
   fChain->SetBranchAddress("mMergedPairs.fBits", &mMergedPairs_fBits, &b_mMergedPairs_fBits);
   fChain->SetBranchAddress("mMergedPairs.mIsValidGl", &mMergedPairs_mIsValidGl, &b_mMergedPairs_mIsValidGl);
   fChain->SetBranchAddress("mMergedPairs.mPtPr", &mMergedPairs_mPtPr, &b_mMergedPairs_mPtPr);
   fChain->SetBranchAddress("mMergedPairs.mPzPr", &mMergedPairs_mPzPr, &b_mMergedPairs_mPzPr);
   fChain->SetBranchAddress("mMergedPairs.mEtaPr", &mMergedPairs_mEtaPr, &b_mMergedPairs_mEtaPr);
   fChain->SetBranchAddress("mMergedPairs.mPhiPr", &mMergedPairs_mPhiPr, &b_mMergedPairs_mPhiPr);
   fChain->SetBranchAddress("mMergedPairs.mDcaPr", &mMergedPairs_mDcaPr, &b_mMergedPairs_mDcaPr);
   fChain->SetBranchAddress("mMergedPairs.mDcaXYPr", &mMergedPairs_mDcaXYPr, &b_mMergedPairs_mDcaXYPr);
   fChain->SetBranchAddress("mMergedPairs.mDcaZPr", &mMergedPairs_mDcaZPr, &b_mMergedPairs_mDcaZPr);
   fChain->SetBranchAddress("mMergedPairs.mDcaXYPrMcV", &mMergedPairs_mDcaXYPrMcV, &b_mMergedPairs_mDcaXYPrMcV);
   fChain->SetBranchAddress("mMergedPairs.mDcaZPrMcV", &mMergedPairs_mDcaZPrMcV, &b_mMergedPairs_mDcaZPrMcV);
   fChain->SetBranchAddress("mMergedPairs.mCurvPr", &mMergedPairs_mCurvPr, &b_mMergedPairs_mCurvPr);
   fChain->SetBranchAddress("mMergedPairs.mTanLPr", &mMergedPairs_mTanLPr, &b_mMergedPairs_mTanLPr);
   fChain->SetBranchAddress("mMergedPairs.mErrP[5]", &mMergedPairs_mErrP, &b_mMergedPairs_mErrP);
   fChain->SetBranchAddress("mMergedPairs.mChi2Pr", &mMergedPairs_mChi2Pr, &b_mMergedPairs_mChi2Pr);
   fChain->SetBranchAddress("mMergedPairs.mFlag", &mMergedPairs_mFlag, &b_mMergedPairs_mFlag);
   fChain->SetBranchAddress("mMergedPairs.mDedx", &mMergedPairs_mDedx, &b_mMergedPairs_mDedx);
   fChain->SetBranchAddress("mMergedPairs.mPtGl", &mMergedPairs_mPtGl, &b_mMergedPairs_mPtGl);
   fChain->SetBranchAddress("mMergedPairs.mPzGl", &mMergedPairs_mPzGl, &b_mMergedPairs_mPzGl);
   fChain->SetBranchAddress("mMergedPairs.mEtaGl", &mMergedPairs_mEtaGl, &b_mMergedPairs_mEtaGl);
   fChain->SetBranchAddress("mMergedPairs.mPhiGl", &mMergedPairs_mPhiGl, &b_mMergedPairs_mPhiGl);
   fChain->SetBranchAddress("mMergedPairs.mDcaGl", &mMergedPairs_mDcaGl, &b_mMergedPairs_mDcaGl);
   fChain->SetBranchAddress("mMergedPairs.mDcaXYGl", &mMergedPairs_mDcaXYGl, &b_mMergedPairs_mDcaXYGl);
   fChain->SetBranchAddress("mMergedPairs.mDcaZGl", &mMergedPairs_mDcaZGl, &b_mMergedPairs_mDcaZGl);
   fChain->SetBranchAddress("mMergedPairs.mDcaXYGlMcV", &mMergedPairs_mDcaXYGlMcV, &b_mMergedPairs_mDcaXYGlMcV);
   fChain->SetBranchAddress("mMergedPairs.mDcaZGlMcV", &mMergedPairs_mDcaZGlMcV, &b_mMergedPairs_mDcaZGlMcV);
   fChain->SetBranchAddress("mMergedPairs.mCurvGl", &mMergedPairs_mCurvGl, &b_mMergedPairs_mCurvGl);
   fChain->SetBranchAddress("mMergedPairs.mTanLGl", &mMergedPairs_mTanLGl, &b_mMergedPairs_mTanLGl);
   fChain->SetBranchAddress("mMergedPairs.mErrG[5]", &mMergedPairs_mErrG, &b_mMergedPairs_mErrG);
   fChain->SetBranchAddress("mMergedPairs.mPidPion", &mMergedPairs_mPidPion, &b_mMergedPairs_mPidPion);
   fChain->SetBranchAddress("mMergedPairs.mPidProton", &mMergedPairs_mPidProton, &b_mMergedPairs_mPidProton);
   fChain->SetBranchAddress("mMergedPairs.mPidKaon", &mMergedPairs_mPidKaon, &b_mMergedPairs_mPidKaon);
   fChain->SetBranchAddress("mMergedPairs.mPidElectron", &mMergedPairs_mPidElectron, &b_mMergedPairs_mPidElectron);
   fChain->SetBranchAddress("mMergedPairs.mFirstZ", &mMergedPairs_mFirstZ, &b_mMergedPairs_mFirstZ);
   fChain->SetBranchAddress("mMergedPairs.mLastZ", &mMergedPairs_mLastZ, &b_mMergedPairs_mLastZ);
   fChain->SetBranchAddress("mMergedPairs.mFirstPadrow", &mMergedPairs_mFirstPadrow, &b_mMergedPairs_mFirstPadrow);
   fChain->SetBranchAddress("mMergedPairs.mLastPadrow", &mMergedPairs_mLastPadrow, &b_mMergedPairs_mLastPadrow);
   fChain->SetBranchAddress("mMergedPairs.mFirstFitPadrow", &mMergedPairs_mFirstFitPadrow, &b_mMergedPairs_mFirstFitPadrow);
   fChain->SetBranchAddress("mMergedPairs.mLastFitPadrow", &mMergedPairs_mLastFitPadrow, &b_mMergedPairs_mLastFitPadrow);
   fChain->SetBranchAddress("mMergedPairs.mFirstSector", &mMergedPairs_mFirstSector, &b_mMergedPairs_mFirstSector);
   fChain->SetBranchAddress("mMergedPairs.mLastSector", &mMergedPairs_mLastSector, &b_mMergedPairs_mLastSector);
   fChain->SetBranchAddress("mMergedPairs.mRecoKey", &mMergedPairs_mRecoKey, &b_mMergedPairs_mRecoKey);
   fChain->SetBranchAddress("mMergedPairs.mFitPts", &mMergedPairs_mFitPts, &b_mMergedPairs_mFitPts);
   fChain->SetBranchAddress("mMergedPairs.mFitSvt", &mMergedPairs_mFitSvt, &b_mMergedPairs_mFitSvt);
   fChain->SetBranchAddress("mMergedPairs.mFitSsd", &mMergedPairs_mFitSsd, &b_mMergedPairs_mFitSsd);
   fChain->SetBranchAddress("mMergedPairs.mFitFtpc", &mMergedPairs_mFitFtpc, &b_mMergedPairs_mFitFtpc);
   fChain->SetBranchAddress("mMergedPairs.mDedxPts", &mMergedPairs_mDedxPts, &b_mMergedPairs_mDedxPts);
   fChain->SetBranchAddress("mMergedPairs.mAllPts", &mMergedPairs_mAllPts, &b_mMergedPairs_mAllPts);
   fChain->SetBranchAddress("mMergedPairs.mCharge", &mMergedPairs_mCharge, &b_mMergedPairs_mCharge);
   fChain->SetBranchAddress("mMergedPairs.mNAssocMc", &mMergedPairs_mNAssocMc, &b_mMergedPairs_mNAssocMc);
   fChain->SetBranchAddress("mMergedPairs.mNPossible", &mMergedPairs_mNPossible, &b_mMergedPairs_mNPossible);
   fChain->SetBranchAddress("mMergedPairs.mIsValidPr", &mMergedPairs_mIsValidPr, &b_mMergedPairs_mIsValidPr);
   fChain->SetBranchAddress("mMergedPairs.mEmcTowerAdc[3]", &mMergedPairs_mEmcTowerAdc, &b_mMergedPairs_mEmcTowerAdc);
   fChain->SetBranchAddress("mMergedPairs.mEmcEnergyRcHit[3]", &mMergedPairs_mEmcEnergyRcHit, &b_mMergedPairs_mEmcEnergyRcHit);
   fChain->SetBranchAddress("mMergedPairs.mEmcSoftIdHiTowerRc[3]", &mMergedPairs_mEmcSoftIdHiTowerRc, &b_mMergedPairs_mEmcSoftIdHiTowerRc);
   fChain->SetBranchAddress("mSplitPairs_", &mSplitPairs_, &b_mSplitPairs_);
   fChain->SetBranchAddress("mSplitPairs.mNCommonHit", &mSplitPairs_mNCommonHit, &b_mSplitPairs_mNCommonHit);
   fChain->SetBranchAddress("mSplitPairs.mIsBestContam", &mSplitPairs_mIsBestContam, &b_mSplitPairs_mIsBestContam);
   fChain->SetBranchAddress("mSplitPairs.mDominatrack", &mSplitPairs_mDominatrack, &b_mSplitPairs_mDominatrack);
   fChain->SetBranchAddress("mSplitPairs.mDominCommonHit", &mSplitPairs_mDominCommonHit, &b_mSplitPairs_mDominCommonHit);
   fChain->SetBranchAddress("mSplitPairs.mAvgQuality", &mSplitPairs_mAvgQuality, &b_mSplitPairs_mAvgQuality);
   fChain->SetBranchAddress("mSplitPairs.mIsValid", &mSplitPairs_mIsValid, &b_mSplitPairs_mIsValid);
   fChain->SetBranchAddress("mSplitPairs.mPtMc", &mSplitPairs_mPtMc, &b_mSplitPairs_mPtMc);
   fChain->SetBranchAddress("mSplitPairs.mPzMc", &mSplitPairs_mPzMc, &b_mSplitPairs_mPzMc);
   fChain->SetBranchAddress("mSplitPairs.mEtaMc", &mSplitPairs_mEtaMc, &b_mSplitPairs_mEtaMc);
   fChain->SetBranchAddress("mSplitPairs.mPhiMc", &mSplitPairs_mPhiMc, &b_mSplitPairs_mPhiMc);
   fChain->SetBranchAddress("mSplitPairs.mNHitMc", &mSplitPairs_mNHitMc, &b_mSplitPairs_mNHitMc);
   fChain->SetBranchAddress("mSplitPairs.mNSvtHitMc", &mSplitPairs_mNSvtHitMc, &b_mSplitPairs_mNSvtHitMc);
   fChain->SetBranchAddress("mSplitPairs.mNSsdHitMc", &mSplitPairs_mNSsdHitMc, &b_mSplitPairs_mNSsdHitMc);
   fChain->SetBranchAddress("mSplitPairs.mNFtpcHitMc", &mSplitPairs_mNFtpcHitMc, &b_mSplitPairs_mNFtpcHitMc);
   fChain->SetBranchAddress("mSplitPairs.mNBemcHitMc", &mSplitPairs_mNBemcHitMc, &b_mSplitPairs_mNBemcHitMc);
   fChain->SetBranchAddress("mSplitPairs.mNBprsHitMc", &mSplitPairs_mNBprsHitMc, &b_mSplitPairs_mNBprsHitMc);
   fChain->SetBranchAddress("mSplitPairs.mNBsmdeHitMc", &mSplitPairs_mNBsmdeHitMc, &b_mSplitPairs_mNBsmdeHitMc);
   fChain->SetBranchAddress("mSplitPairs.mNBsmdpHitMc", &mSplitPairs_mNBsmdpHitMc, &b_mSplitPairs_mNBsmdpHitMc);
   fChain->SetBranchAddress("mSplitPairs.mNEemcHitMc", &mSplitPairs_mNEemcHitMc, &b_mSplitPairs_mNEemcHitMc);
   fChain->SetBranchAddress("mSplitPairs.mNEprsHitMc", &mSplitPairs_mNEprsHitMc, &b_mSplitPairs_mNEprsHitMc);
   fChain->SetBranchAddress("mSplitPairs.mNEsmduHitMc", &mSplitPairs_mNEsmduHitMc, &b_mSplitPairs_mNEsmduHitMc);
   fChain->SetBranchAddress("mSplitPairs.mNEsmdvHitMc", &mSplitPairs_mNEsmdvHitMc, &b_mSplitPairs_mNEsmdvHitMc);
   fChain->SetBranchAddress("mSplitPairs.mGeantId", &mSplitPairs_mGeantId, &b_mSplitPairs_mGeantId);
   fChain->SetBranchAddress("mSplitPairs.mChargeMc", &mSplitPairs_mChargeMc, &b_mSplitPairs_mChargeMc);
   fChain->SetBranchAddress("mSplitPairs.mStopR", &mSplitPairs_mStopR, &b_mSplitPairs_mStopR);
   fChain->SetBranchAddress("mSplitPairs.mKey", &mSplitPairs_mKey, &b_mSplitPairs_mKey);
   fChain->SetBranchAddress("mSplitPairs.mParentKey", &mSplitPairs_mParentKey, &b_mSplitPairs_mParentKey);
   fChain->SetBranchAddress("mSplitPairs.mParentGeantId", &mSplitPairs_mParentGeantId, &b_mSplitPairs_mParentGeantId);
   fChain->SetBranchAddress("mSplitPairs.mEmcEnergyMcHit[3]", &mSplitPairs_mEmcEnergyMcHit, &b_mSplitPairs_mEmcEnergyMcHit);
   fChain->SetBranchAddress("mSplitPairs.mEmcEnergyMcSum", &mSplitPairs_mEmcEnergyMcSum, &b_mSplitPairs_mEmcEnergyMcSum);
   fChain->SetBranchAddress("mSplitPairs.mEmcSoftIdHiTowerMc[3]", &mSplitPairs_mEmcSoftIdHiTowerMc, &b_mSplitPairs_mEmcSoftIdHiTowerMc);
   fChain->SetBranchAddress("mSplitPairs.mNAssocGl", &mSplitPairs_mNAssocGl, &b_mSplitPairs_mNAssocGl);
   fChain->SetBranchAddress("mSplitPairs.mNAssocPr", &mSplitPairs_mNAssocPr, &b_mSplitPairs_mNAssocPr);
   fChain->SetBranchAddress("mSplitPairs.mIsPrimary", &mSplitPairs_mIsPrimary, &b_mSplitPairs_mIsPrimary);
   fChain->SetBranchAddress("mSplitPairs.fUniqueID", &mSplitPairs_fUniqueID, &b_mSplitPairs_fUniqueID);
   fChain->SetBranchAddress("mSplitPairs.fBits", &mSplitPairs_fBits, &b_mSplitPairs_fBits);
   fChain->SetBranchAddress("mSplitPairs.mIsValidGl", &mSplitPairs_mIsValidGl, &b_mSplitPairs_mIsValidGl);
   fChain->SetBranchAddress("mSplitPairs.mPtPr", &mSplitPairs_mPtPr, &b_mSplitPairs_mPtPr);
   fChain->SetBranchAddress("mSplitPairs.mPzPr", &mSplitPairs_mPzPr, &b_mSplitPairs_mPzPr);
   fChain->SetBranchAddress("mSplitPairs.mEtaPr", &mSplitPairs_mEtaPr, &b_mSplitPairs_mEtaPr);
   fChain->SetBranchAddress("mSplitPairs.mPhiPr", &mSplitPairs_mPhiPr, &b_mSplitPairs_mPhiPr);
   fChain->SetBranchAddress("mSplitPairs.mDcaPr", &mSplitPairs_mDcaPr, &b_mSplitPairs_mDcaPr);
   fChain->SetBranchAddress("mSplitPairs.mDcaXYPr", &mSplitPairs_mDcaXYPr, &b_mSplitPairs_mDcaXYPr);
   fChain->SetBranchAddress("mSplitPairs.mDcaZPr", &mSplitPairs_mDcaZPr, &b_mSplitPairs_mDcaZPr);
   fChain->SetBranchAddress("mSplitPairs.mDcaXYPrMcV", &mSplitPairs_mDcaXYPrMcV, &b_mSplitPairs_mDcaXYPrMcV);
   fChain->SetBranchAddress("mSplitPairs.mDcaZPrMcV", &mSplitPairs_mDcaZPrMcV, &b_mSplitPairs_mDcaZPrMcV);
   fChain->SetBranchAddress("mSplitPairs.mCurvPr", &mSplitPairs_mCurvPr, &b_mSplitPairs_mCurvPr);
   fChain->SetBranchAddress("mSplitPairs.mTanLPr", &mSplitPairs_mTanLPr, &b_mSplitPairs_mTanLPr);
   fChain->SetBranchAddress("mSplitPairs.mErrP[5]", &mSplitPairs_mErrP, &b_mSplitPairs_mErrP);
   fChain->SetBranchAddress("mSplitPairs.mChi2Pr", &mSplitPairs_mChi2Pr, &b_mSplitPairs_mChi2Pr);
   fChain->SetBranchAddress("mSplitPairs.mFlag", &mSplitPairs_mFlag, &b_mSplitPairs_mFlag);
   fChain->SetBranchAddress("mSplitPairs.mDedx", &mSplitPairs_mDedx, &b_mSplitPairs_mDedx);
   fChain->SetBranchAddress("mSplitPairs.mPtGl", &mSplitPairs_mPtGl, &b_mSplitPairs_mPtGl);
   fChain->SetBranchAddress("mSplitPairs.mPzGl", &mSplitPairs_mPzGl, &b_mSplitPairs_mPzGl);
   fChain->SetBranchAddress("mSplitPairs.mEtaGl", &mSplitPairs_mEtaGl, &b_mSplitPairs_mEtaGl);
   fChain->SetBranchAddress("mSplitPairs.mPhiGl", &mSplitPairs_mPhiGl, &b_mSplitPairs_mPhiGl);
   fChain->SetBranchAddress("mSplitPairs.mDcaGl", &mSplitPairs_mDcaGl, &b_mSplitPairs_mDcaGl);
   fChain->SetBranchAddress("mSplitPairs.mDcaXYGl", &mSplitPairs_mDcaXYGl, &b_mSplitPairs_mDcaXYGl);
   fChain->SetBranchAddress("mSplitPairs.mDcaZGl", &mSplitPairs_mDcaZGl, &b_mSplitPairs_mDcaZGl);
   fChain->SetBranchAddress("mSplitPairs.mDcaXYGlMcV", &mSplitPairs_mDcaXYGlMcV, &b_mSplitPairs_mDcaXYGlMcV);
   fChain->SetBranchAddress("mSplitPairs.mDcaZGlMcV", &mSplitPairs_mDcaZGlMcV, &b_mSplitPairs_mDcaZGlMcV);
   fChain->SetBranchAddress("mSplitPairs.mCurvGl", &mSplitPairs_mCurvGl, &b_mSplitPairs_mCurvGl);
   fChain->SetBranchAddress("mSplitPairs.mTanLGl", &mSplitPairs_mTanLGl, &b_mSplitPairs_mTanLGl);
   fChain->SetBranchAddress("mSplitPairs.mErrG[5]", &mSplitPairs_mErrG, &b_mSplitPairs_mErrG);
   fChain->SetBranchAddress("mSplitPairs.mPidPion", &mSplitPairs_mPidPion, &b_mSplitPairs_mPidPion);
   fChain->SetBranchAddress("mSplitPairs.mPidProton", &mSplitPairs_mPidProton, &b_mSplitPairs_mPidProton);
   fChain->SetBranchAddress("mSplitPairs.mPidKaon", &mSplitPairs_mPidKaon, &b_mSplitPairs_mPidKaon);
   fChain->SetBranchAddress("mSplitPairs.mPidElectron", &mSplitPairs_mPidElectron, &b_mSplitPairs_mPidElectron);
   fChain->SetBranchAddress("mSplitPairs.mFirstZ", &mSplitPairs_mFirstZ, &b_mSplitPairs_mFirstZ);
   fChain->SetBranchAddress("mSplitPairs.mLastZ", &mSplitPairs_mLastZ, &b_mSplitPairs_mLastZ);
   fChain->SetBranchAddress("mSplitPairs.mFirstPadrow", &mSplitPairs_mFirstPadrow, &b_mSplitPairs_mFirstPadrow);
   fChain->SetBranchAddress("mSplitPairs.mLastPadrow", &mSplitPairs_mLastPadrow, &b_mSplitPairs_mLastPadrow);
   fChain->SetBranchAddress("mSplitPairs.mFirstFitPadrow", &mSplitPairs_mFirstFitPadrow, &b_mSplitPairs_mFirstFitPadrow);
   fChain->SetBranchAddress("mSplitPairs.mLastFitPadrow", &mSplitPairs_mLastFitPadrow, &b_mSplitPairs_mLastFitPadrow);
   fChain->SetBranchAddress("mSplitPairs.mFirstSector", &mSplitPairs_mFirstSector, &b_mSplitPairs_mFirstSector);
   fChain->SetBranchAddress("mSplitPairs.mLastSector", &mSplitPairs_mLastSector, &b_mSplitPairs_mLastSector);
   fChain->SetBranchAddress("mSplitPairs.mRecoKey", &mSplitPairs_mRecoKey, &b_mSplitPairs_mRecoKey);
   fChain->SetBranchAddress("mSplitPairs.mFitPts", &mSplitPairs_mFitPts, &b_mSplitPairs_mFitPts);
   fChain->SetBranchAddress("mSplitPairs.mFitSvt", &mSplitPairs_mFitSvt, &b_mSplitPairs_mFitSvt);
   fChain->SetBranchAddress("mSplitPairs.mFitSsd", &mSplitPairs_mFitSsd, &b_mSplitPairs_mFitSsd);
   fChain->SetBranchAddress("mSplitPairs.mFitFtpc", &mSplitPairs_mFitFtpc, &b_mSplitPairs_mFitFtpc);
   fChain->SetBranchAddress("mSplitPairs.mDedxPts", &mSplitPairs_mDedxPts, &b_mSplitPairs_mDedxPts);
   fChain->SetBranchAddress("mSplitPairs.mAllPts", &mSplitPairs_mAllPts, &b_mSplitPairs_mAllPts);
   fChain->SetBranchAddress("mSplitPairs.mCharge", &mSplitPairs_mCharge, &b_mSplitPairs_mCharge);
   fChain->SetBranchAddress("mSplitPairs.mNAssocMc", &mSplitPairs_mNAssocMc, &b_mSplitPairs_mNAssocMc);
   fChain->SetBranchAddress("mSplitPairs.mNPossible", &mSplitPairs_mNPossible, &b_mSplitPairs_mNPossible);
   fChain->SetBranchAddress("mSplitPairs.mIsValidPr", &mSplitPairs_mIsValidPr, &b_mSplitPairs_mIsValidPr);
   fChain->SetBranchAddress("mSplitPairs.mEmcTowerAdc[3]", &mSplitPairs_mEmcTowerAdc, &b_mSplitPairs_mEmcTowerAdc);
   fChain->SetBranchAddress("mSplitPairs.mEmcEnergyRcHit[3]", &mSplitPairs_mEmcEnergyRcHit, &b_mSplitPairs_mEmcEnergyRcHit);
   fChain->SetBranchAddress("mSplitPairs.mEmcSoftIdHiTowerRc[3]", &mSplitPairs_mEmcSoftIdHiTowerRc, &b_mSplitPairs_mEmcSoftIdHiTowerRc);
   fChain->SetBranchAddress("mGhostPairs_", &mGhostPairs_, &b_mGhostPairs_);
   fChain->SetBranchAddress("mGhostPairs.mNCommonHit", &mGhostPairs_mNCommonHit, &b_mGhostPairs_mNCommonHit);
   fChain->SetBranchAddress("mGhostPairs.mIsBestContam", &mGhostPairs_mIsBestContam, &b_mGhostPairs_mIsBestContam);
   fChain->SetBranchAddress("mGhostPairs.mDominatrack", &mGhostPairs_mDominatrack, &b_mGhostPairs_mDominatrack);
   fChain->SetBranchAddress("mGhostPairs.mDominCommonHit", &mGhostPairs_mDominCommonHit, &b_mGhostPairs_mDominCommonHit);
   fChain->SetBranchAddress("mGhostPairs.mAvgQuality", &mGhostPairs_mAvgQuality, &b_mGhostPairs_mAvgQuality);
   fChain->SetBranchAddress("mGhostPairs.mIsValid", &mGhostPairs_mIsValid, &b_mGhostPairs_mIsValid);
   fChain->SetBranchAddress("mGhostPairs.mPtMc", &mGhostPairs_mPtMc, &b_mGhostPairs_mPtMc);
   fChain->SetBranchAddress("mGhostPairs.mPzMc", &mGhostPairs_mPzMc, &b_mGhostPairs_mPzMc);
   fChain->SetBranchAddress("mGhostPairs.mEtaMc", &mGhostPairs_mEtaMc, &b_mGhostPairs_mEtaMc);
   fChain->SetBranchAddress("mGhostPairs.mPhiMc", &mGhostPairs_mPhiMc, &b_mGhostPairs_mPhiMc);
   fChain->SetBranchAddress("mGhostPairs.mNHitMc", &mGhostPairs_mNHitMc, &b_mGhostPairs_mNHitMc);
   fChain->SetBranchAddress("mGhostPairs.mNSvtHitMc", &mGhostPairs_mNSvtHitMc, &b_mGhostPairs_mNSvtHitMc);
   fChain->SetBranchAddress("mGhostPairs.mNSsdHitMc", &mGhostPairs_mNSsdHitMc, &b_mGhostPairs_mNSsdHitMc);
   fChain->SetBranchAddress("mGhostPairs.mNFtpcHitMc", &mGhostPairs_mNFtpcHitMc, &b_mGhostPairs_mNFtpcHitMc);
   fChain->SetBranchAddress("mGhostPairs.mNBemcHitMc", &mGhostPairs_mNBemcHitMc, &b_mGhostPairs_mNBemcHitMc);
   fChain->SetBranchAddress("mGhostPairs.mNBprsHitMc", &mGhostPairs_mNBprsHitMc, &b_mGhostPairs_mNBprsHitMc);
   fChain->SetBranchAddress("mGhostPairs.mNBsmdeHitMc", &mGhostPairs_mNBsmdeHitMc, &b_mGhostPairs_mNBsmdeHitMc);
   fChain->SetBranchAddress("mGhostPairs.mNBsmdpHitMc", &mGhostPairs_mNBsmdpHitMc, &b_mGhostPairs_mNBsmdpHitMc);
   fChain->SetBranchAddress("mGhostPairs.mNEemcHitMc", &mGhostPairs_mNEemcHitMc, &b_mGhostPairs_mNEemcHitMc);
   fChain->SetBranchAddress("mGhostPairs.mNEprsHitMc", &mGhostPairs_mNEprsHitMc, &b_mGhostPairs_mNEprsHitMc);
   fChain->SetBranchAddress("mGhostPairs.mNEsmduHitMc", &mGhostPairs_mNEsmduHitMc, &b_mGhostPairs_mNEsmduHitMc);
   fChain->SetBranchAddress("mGhostPairs.mNEsmdvHitMc", &mGhostPairs_mNEsmdvHitMc, &b_mGhostPairs_mNEsmdvHitMc);
   fChain->SetBranchAddress("mGhostPairs.mGeantId", &mGhostPairs_mGeantId, &b_mGhostPairs_mGeantId);
   fChain->SetBranchAddress("mGhostPairs.mChargeMc", &mGhostPairs_mChargeMc, &b_mGhostPairs_mChargeMc);
   fChain->SetBranchAddress("mGhostPairs.mStopR", &mGhostPairs_mStopR, &b_mGhostPairs_mStopR);
   fChain->SetBranchAddress("mGhostPairs.mKey", &mGhostPairs_mKey, &b_mGhostPairs_mKey);
   fChain->SetBranchAddress("mGhostPairs.mParentKey", &mGhostPairs_mParentKey, &b_mGhostPairs_mParentKey);
   fChain->SetBranchAddress("mGhostPairs.mParentGeantId", &mGhostPairs_mParentGeantId, &b_mGhostPairs_mParentGeantId);
   fChain->SetBranchAddress("mGhostPairs.mEmcEnergyMcHit[3]", &mGhostPairs_mEmcEnergyMcHit, &b_mGhostPairs_mEmcEnergyMcHit);
   fChain->SetBranchAddress("mGhostPairs.mEmcEnergyMcSum", &mGhostPairs_mEmcEnergyMcSum, &b_mGhostPairs_mEmcEnergyMcSum);
   fChain->SetBranchAddress("mGhostPairs.mEmcSoftIdHiTowerMc[3]", &mGhostPairs_mEmcSoftIdHiTowerMc, &b_mGhostPairs_mEmcSoftIdHiTowerMc);
   fChain->SetBranchAddress("mGhostPairs.mNAssocGl", &mGhostPairs_mNAssocGl, &b_mGhostPairs_mNAssocGl);
   fChain->SetBranchAddress("mGhostPairs.mNAssocPr", &mGhostPairs_mNAssocPr, &b_mGhostPairs_mNAssocPr);
   fChain->SetBranchAddress("mGhostPairs.mIsPrimary", &mGhostPairs_mIsPrimary, &b_mGhostPairs_mIsPrimary);
   fChain->SetBranchAddress("mGhostPairs.fUniqueID", &mGhostPairs_fUniqueID, &b_mGhostPairs_fUniqueID);
   fChain->SetBranchAddress("mGhostPairs.fBits", &mGhostPairs_fBits, &b_mGhostPairs_fBits);
   fChain->SetBranchAddress("mGhostPairs.mIsValidGl", &mGhostPairs_mIsValidGl, &b_mGhostPairs_mIsValidGl);
   fChain->SetBranchAddress("mGhostPairs.mPtPr", &mGhostPairs_mPtPr, &b_mGhostPairs_mPtPr);
   fChain->SetBranchAddress("mGhostPairs.mPzPr", &mGhostPairs_mPzPr, &b_mGhostPairs_mPzPr);
   fChain->SetBranchAddress("mGhostPairs.mEtaPr", &mGhostPairs_mEtaPr, &b_mGhostPairs_mEtaPr);
   fChain->SetBranchAddress("mGhostPairs.mPhiPr", &mGhostPairs_mPhiPr, &b_mGhostPairs_mPhiPr);
   fChain->SetBranchAddress("mGhostPairs.mDcaPr", &mGhostPairs_mDcaPr, &b_mGhostPairs_mDcaPr);
   fChain->SetBranchAddress("mGhostPairs.mDcaXYPr", &mGhostPairs_mDcaXYPr, &b_mGhostPairs_mDcaXYPr);
   fChain->SetBranchAddress("mGhostPairs.mDcaZPr", &mGhostPairs_mDcaZPr, &b_mGhostPairs_mDcaZPr);
   fChain->SetBranchAddress("mGhostPairs.mDcaXYPrMcV", &mGhostPairs_mDcaXYPrMcV, &b_mGhostPairs_mDcaXYPrMcV);
   fChain->SetBranchAddress("mGhostPairs.mDcaZPrMcV", &mGhostPairs_mDcaZPrMcV, &b_mGhostPairs_mDcaZPrMcV);
   fChain->SetBranchAddress("mGhostPairs.mCurvPr", &mGhostPairs_mCurvPr, &b_mGhostPairs_mCurvPr);
   fChain->SetBranchAddress("mGhostPairs.mTanLPr", &mGhostPairs_mTanLPr, &b_mGhostPairs_mTanLPr);
   fChain->SetBranchAddress("mGhostPairs.mErrP[5]", &mGhostPairs_mErrP, &b_mGhostPairs_mErrP);
   fChain->SetBranchAddress("mGhostPairs.mChi2Pr", &mGhostPairs_mChi2Pr, &b_mGhostPairs_mChi2Pr);
   fChain->SetBranchAddress("mGhostPairs.mFlag", &mGhostPairs_mFlag, &b_mGhostPairs_mFlag);
   fChain->SetBranchAddress("mGhostPairs.mDedx", &mGhostPairs_mDedx, &b_mGhostPairs_mDedx);
   fChain->SetBranchAddress("mGhostPairs.mPtGl", &mGhostPairs_mPtGl, &b_mGhostPairs_mPtGl);
   fChain->SetBranchAddress("mGhostPairs.mPzGl", &mGhostPairs_mPzGl, &b_mGhostPairs_mPzGl);
   fChain->SetBranchAddress("mGhostPairs.mEtaGl", &mGhostPairs_mEtaGl, &b_mGhostPairs_mEtaGl);
   fChain->SetBranchAddress("mGhostPairs.mPhiGl", &mGhostPairs_mPhiGl, &b_mGhostPairs_mPhiGl);
   fChain->SetBranchAddress("mGhostPairs.mDcaGl", &mGhostPairs_mDcaGl, &b_mGhostPairs_mDcaGl);
   fChain->SetBranchAddress("mGhostPairs.mDcaXYGl", &mGhostPairs_mDcaXYGl, &b_mGhostPairs_mDcaXYGl);
   fChain->SetBranchAddress("mGhostPairs.mDcaZGl", &mGhostPairs_mDcaZGl, &b_mGhostPairs_mDcaZGl);
   fChain->SetBranchAddress("mGhostPairs.mDcaXYGlMcV", &mGhostPairs_mDcaXYGlMcV, &b_mGhostPairs_mDcaXYGlMcV);
   fChain->SetBranchAddress("mGhostPairs.mDcaZGlMcV", &mGhostPairs_mDcaZGlMcV, &b_mGhostPairs_mDcaZGlMcV);
   fChain->SetBranchAddress("mGhostPairs.mCurvGl", &mGhostPairs_mCurvGl, &b_mGhostPairs_mCurvGl);
   fChain->SetBranchAddress("mGhostPairs.mTanLGl", &mGhostPairs_mTanLGl, &b_mGhostPairs_mTanLGl);
   fChain->SetBranchAddress("mGhostPairs.mErrG[5]", &mGhostPairs_mErrG, &b_mGhostPairs_mErrG);
   fChain->SetBranchAddress("mGhostPairs.mPidPion", &mGhostPairs_mPidPion, &b_mGhostPairs_mPidPion);
   fChain->SetBranchAddress("mGhostPairs.mPidProton", &mGhostPairs_mPidProton, &b_mGhostPairs_mPidProton);
   fChain->SetBranchAddress("mGhostPairs.mPidKaon", &mGhostPairs_mPidKaon, &b_mGhostPairs_mPidKaon);
   fChain->SetBranchAddress("mGhostPairs.mPidElectron", &mGhostPairs_mPidElectron, &b_mGhostPairs_mPidElectron);
   fChain->SetBranchAddress("mGhostPairs.mFirstZ", &mGhostPairs_mFirstZ, &b_mGhostPairs_mFirstZ);
   fChain->SetBranchAddress("mGhostPairs.mLastZ", &mGhostPairs_mLastZ, &b_mGhostPairs_mLastZ);
   fChain->SetBranchAddress("mGhostPairs.mFirstPadrow", &mGhostPairs_mFirstPadrow, &b_mGhostPairs_mFirstPadrow);
   fChain->SetBranchAddress("mGhostPairs.mLastPadrow", &mGhostPairs_mLastPadrow, &b_mGhostPairs_mLastPadrow);
   fChain->SetBranchAddress("mGhostPairs.mFirstFitPadrow", &mGhostPairs_mFirstFitPadrow, &b_mGhostPairs_mFirstFitPadrow);
   fChain->SetBranchAddress("mGhostPairs.mLastFitPadrow", &mGhostPairs_mLastFitPadrow, &b_mGhostPairs_mLastFitPadrow);
   fChain->SetBranchAddress("mGhostPairs.mFirstSector", &mGhostPairs_mFirstSector, &b_mGhostPairs_mFirstSector);
   fChain->SetBranchAddress("mGhostPairs.mLastSector", &mGhostPairs_mLastSector, &b_mGhostPairs_mLastSector);
   fChain->SetBranchAddress("mGhostPairs.mRecoKey", &mGhostPairs_mRecoKey, &b_mGhostPairs_mRecoKey);
   fChain->SetBranchAddress("mGhostPairs.mFitPts", &mGhostPairs_mFitPts, &b_mGhostPairs_mFitPts);
   fChain->SetBranchAddress("mGhostPairs.mFitSvt", &mGhostPairs_mFitSvt, &b_mGhostPairs_mFitSvt);
   fChain->SetBranchAddress("mGhostPairs.mFitSsd", &mGhostPairs_mFitSsd, &b_mGhostPairs_mFitSsd);
   fChain->SetBranchAddress("mGhostPairs.mFitFtpc", &mGhostPairs_mFitFtpc, &b_mGhostPairs_mFitFtpc);
   fChain->SetBranchAddress("mGhostPairs.mDedxPts", &mGhostPairs_mDedxPts, &b_mGhostPairs_mDedxPts);
   fChain->SetBranchAddress("mGhostPairs.mAllPts", &mGhostPairs_mAllPts, &b_mGhostPairs_mAllPts);
   fChain->SetBranchAddress("mGhostPairs.mCharge", &mGhostPairs_mCharge, &b_mGhostPairs_mCharge);
   fChain->SetBranchAddress("mGhostPairs.mNAssocMc", &mGhostPairs_mNAssocMc, &b_mGhostPairs_mNAssocMc);
   fChain->SetBranchAddress("mGhostPairs.mNPossible", &mGhostPairs_mNPossible, &b_mGhostPairs_mNPossible);
   fChain->SetBranchAddress("mGhostPairs.mIsValidPr", &mGhostPairs_mIsValidPr, &b_mGhostPairs_mIsValidPr);
   fChain->SetBranchAddress("mGhostPairs.mEmcTowerAdc[3]", &mGhostPairs_mEmcTowerAdc, &b_mGhostPairs_mEmcTowerAdc);
   fChain->SetBranchAddress("mGhostPairs.mEmcEnergyRcHit[3]", &mGhostPairs_mEmcEnergyRcHit, &b_mGhostPairs_mEmcEnergyRcHit);
   fChain->SetBranchAddress("mGhostPairs.mEmcSoftIdHiTowerRc[3]", &mGhostPairs_mEmcSoftIdHiTowerRc, &b_mGhostPairs_mEmcSoftIdHiTowerRc);
   fChain->SetBranchAddress("mContamPairs_", &mContamPairs_, &b_mContamPairs_);
   fChain->SetBranchAddress("mContamPairs.mParentGeantId", &mContamPairs_mParentGeantId, &b_mContamPairs_mParentGeantId);
   fChain->SetBranchAddress("mContamPairs.mGeantProcess", &mContamPairs_mGeantProcess, &b_mContamPairs_mGeantProcess);
   fChain->SetBranchAddress("mContamPairs.mPtMcParent", &mContamPairs_mPtMcParent, &b_mContamPairs_mPtMcParent);
   fChain->SetBranchAddress("mContamPairs.mEtaMcParent", &mContamPairs_mEtaMcParent, &b_mContamPairs_mEtaMcParent);
   fChain->SetBranchAddress("mContamPairs.mParentParentGeantId", &mContamPairs_mParentParentGeantId, &b_mContamPairs_mParentParentGeantId);
   fChain->SetBranchAddress("mContamPairs.mPtMcParentParent", &mContamPairs_mPtMcParentParent, &b_mContamPairs_mPtMcParentParent);
   fChain->SetBranchAddress("mContamPairs.mStartX", &mContamPairs_mStartX, &b_mContamPairs_mStartX);
   fChain->SetBranchAddress("mContamPairs.mStartY", &mContamPairs_mStartY, &b_mContamPairs_mStartY);
   fChain->SetBranchAddress("mContamPairs.mStartZ", &mContamPairs_mStartZ, &b_mContamPairs_mStartZ);
   fChain->SetBranchAddress("mContamPairs.mNCommonHit", &mContamPairs_mNCommonHit, &b_mContamPairs_mNCommonHit);
   fChain->SetBranchAddress("mContamPairs.mIsBestContam", &mContamPairs_mIsBestContam, &b_mContamPairs_mIsBestContam);
   fChain->SetBranchAddress("mContamPairs.mDominatrack", &mContamPairs_mDominatrack, &b_mContamPairs_mDominatrack);
   fChain->SetBranchAddress("mContamPairs.mDominCommonHit", &mContamPairs_mDominCommonHit, &b_mContamPairs_mDominCommonHit);
   fChain->SetBranchAddress("mContamPairs.mAvgQuality", &mContamPairs_mAvgQuality, &b_mContamPairs_mAvgQuality);
   fChain->SetBranchAddress("mContamPairs.mIsValid", &mContamPairs_mIsValid, &b_mContamPairs_mIsValid);
   fChain->SetBranchAddress("mContamPairs.mPtMc", &mContamPairs_mPtMc, &b_mContamPairs_mPtMc);
   fChain->SetBranchAddress("mContamPairs.mPzMc", &mContamPairs_mPzMc, &b_mContamPairs_mPzMc);
   fChain->SetBranchAddress("mContamPairs.mEtaMc", &mContamPairs_mEtaMc, &b_mContamPairs_mEtaMc);
   fChain->SetBranchAddress("mContamPairs.mPhiMc", &mContamPairs_mPhiMc, &b_mContamPairs_mPhiMc);
   fChain->SetBranchAddress("mContamPairs.mNHitMc", &mContamPairs_mNHitMc, &b_mContamPairs_mNHitMc);
   fChain->SetBranchAddress("mContamPairs.mNSvtHitMc", &mContamPairs_mNSvtHitMc, &b_mContamPairs_mNSvtHitMc);
   fChain->SetBranchAddress("mContamPairs.mNSsdHitMc", &mContamPairs_mNSsdHitMc, &b_mContamPairs_mNSsdHitMc);
   fChain->SetBranchAddress("mContamPairs.mNFtpcHitMc", &mContamPairs_mNFtpcHitMc, &b_mContamPairs_mNFtpcHitMc);
   fChain->SetBranchAddress("mContamPairs.mNBemcHitMc", &mContamPairs_mNBemcHitMc, &b_mContamPairs_mNBemcHitMc);
   fChain->SetBranchAddress("mContamPairs.mNBprsHitMc", &mContamPairs_mNBprsHitMc, &b_mContamPairs_mNBprsHitMc);
   fChain->SetBranchAddress("mContamPairs.mNBsmdeHitMc", &mContamPairs_mNBsmdeHitMc, &b_mContamPairs_mNBsmdeHitMc);
   fChain->SetBranchAddress("mContamPairs.mNBsmdpHitMc", &mContamPairs_mNBsmdpHitMc, &b_mContamPairs_mNBsmdpHitMc);
   fChain->SetBranchAddress("mContamPairs.mNEemcHitMc", &mContamPairs_mNEemcHitMc, &b_mContamPairs_mNEemcHitMc);
   fChain->SetBranchAddress("mContamPairs.mNEprsHitMc", &mContamPairs_mNEprsHitMc, &b_mContamPairs_mNEprsHitMc);
   fChain->SetBranchAddress("mContamPairs.mNEsmduHitMc", &mContamPairs_mNEsmduHitMc, &b_mContamPairs_mNEsmduHitMc);
   fChain->SetBranchAddress("mContamPairs.mNEsmdvHitMc", &mContamPairs_mNEsmdvHitMc, &b_mContamPairs_mNEsmdvHitMc);
   fChain->SetBranchAddress("mContamPairs.mGeantId", &mContamPairs_mGeantId, &b_mContamPairs_mGeantId);
   fChain->SetBranchAddress("mContamPairs.mChargeMc", &mContamPairs_mChargeMc, &b_mContamPairs_mChargeMc);
   fChain->SetBranchAddress("mContamPairs.mStopR", &mContamPairs_mStopR, &b_mContamPairs_mStopR);
   fChain->SetBranchAddress("mContamPairs.mKey", &mContamPairs_mKey, &b_mContamPairs_mKey);
   fChain->SetBranchAddress("mContamPairs.mParentKey", &mContamPairs_mParentKey, &b_mContamPairs_mParentKey);
   fChain->SetBranchAddress("mContamPairs.mParentGeantId", &mContamPairs_mParentGeantId, &b_mContamPairs_mParentGeantId);
   fChain->SetBranchAddress("mContamPairs.mEmcEnergyMcHit[3]", &mContamPairs_mEmcEnergyMcHit, &b_mContamPairs_mEmcEnergyMcHit);
   fChain->SetBranchAddress("mContamPairs.mEmcEnergyMcSum", &mContamPairs_mEmcEnergyMcSum, &b_mContamPairs_mEmcEnergyMcSum);
   fChain->SetBranchAddress("mContamPairs.mEmcSoftIdHiTowerMc[3]", &mContamPairs_mEmcSoftIdHiTowerMc, &b_mContamPairs_mEmcSoftIdHiTowerMc);
   fChain->SetBranchAddress("mContamPairs.mNAssocGl", &mContamPairs_mNAssocGl, &b_mContamPairs_mNAssocGl);
   fChain->SetBranchAddress("mContamPairs.mNAssocPr", &mContamPairs_mNAssocPr, &b_mContamPairs_mNAssocPr);
   fChain->SetBranchAddress("mContamPairs.mIsPrimary", &mContamPairs_mIsPrimary, &b_mContamPairs_mIsPrimary);
   fChain->SetBranchAddress("mContamPairs.fUniqueID", &mContamPairs_fUniqueID, &b_mContamPairs_fUniqueID);
   fChain->SetBranchAddress("mContamPairs.fBits", &mContamPairs_fBits, &b_mContamPairs_fBits);
   fChain->SetBranchAddress("mContamPairs.mIsValidGl", &mContamPairs_mIsValidGl, &b_mContamPairs_mIsValidGl);
   fChain->SetBranchAddress("mContamPairs.mPtPr", &mContamPairs_mPtPr, &b_mContamPairs_mPtPr);
   fChain->SetBranchAddress("mContamPairs.mPzPr", &mContamPairs_mPzPr, &b_mContamPairs_mPzPr);
   fChain->SetBranchAddress("mContamPairs.mEtaPr", &mContamPairs_mEtaPr, &b_mContamPairs_mEtaPr);
   fChain->SetBranchAddress("mContamPairs.mPhiPr", &mContamPairs_mPhiPr, &b_mContamPairs_mPhiPr);
   fChain->SetBranchAddress("mContamPairs.mDcaPr", &mContamPairs_mDcaPr, &b_mContamPairs_mDcaPr);
   fChain->SetBranchAddress("mContamPairs.mDcaXYPr", &mContamPairs_mDcaXYPr, &b_mContamPairs_mDcaXYPr);
   fChain->SetBranchAddress("mContamPairs.mDcaZPr", &mContamPairs_mDcaZPr, &b_mContamPairs_mDcaZPr);
   fChain->SetBranchAddress("mContamPairs.mDcaXYPrMcV", &mContamPairs_mDcaXYPrMcV, &b_mContamPairs_mDcaXYPrMcV);
   fChain->SetBranchAddress("mContamPairs.mDcaZPrMcV", &mContamPairs_mDcaZPrMcV, &b_mContamPairs_mDcaZPrMcV);
   fChain->SetBranchAddress("mContamPairs.mCurvPr", &mContamPairs_mCurvPr, &b_mContamPairs_mCurvPr);
   fChain->SetBranchAddress("mContamPairs.mTanLPr", &mContamPairs_mTanLPr, &b_mContamPairs_mTanLPr);
   fChain->SetBranchAddress("mContamPairs.mErrP[5]", &mContamPairs_mErrP, &b_mContamPairs_mErrP);
   fChain->SetBranchAddress("mContamPairs.mChi2Pr", &mContamPairs_mChi2Pr, &b_mContamPairs_mChi2Pr);
   fChain->SetBranchAddress("mContamPairs.mFlag", &mContamPairs_mFlag, &b_mContamPairs_mFlag);
   fChain->SetBranchAddress("mContamPairs.mDedx", &mContamPairs_mDedx, &b_mContamPairs_mDedx);
   fChain->SetBranchAddress("mContamPairs.mPtGl", &mContamPairs_mPtGl, &b_mContamPairs_mPtGl);
   fChain->SetBranchAddress("mContamPairs.mPzGl", &mContamPairs_mPzGl, &b_mContamPairs_mPzGl);
   fChain->SetBranchAddress("mContamPairs.mEtaGl", &mContamPairs_mEtaGl, &b_mContamPairs_mEtaGl);
   fChain->SetBranchAddress("mContamPairs.mPhiGl", &mContamPairs_mPhiGl, &b_mContamPairs_mPhiGl);
   fChain->SetBranchAddress("mContamPairs.mDcaGl", &mContamPairs_mDcaGl, &b_mContamPairs_mDcaGl);
   fChain->SetBranchAddress("mContamPairs.mDcaXYGl", &mContamPairs_mDcaXYGl, &b_mContamPairs_mDcaXYGl);
   fChain->SetBranchAddress("mContamPairs.mDcaZGl", &mContamPairs_mDcaZGl, &b_mContamPairs_mDcaZGl);
   fChain->SetBranchAddress("mContamPairs.mDcaXYGlMcV", &mContamPairs_mDcaXYGlMcV, &b_mContamPairs_mDcaXYGlMcV);
   fChain->SetBranchAddress("mContamPairs.mDcaZGlMcV", &mContamPairs_mDcaZGlMcV, &b_mContamPairs_mDcaZGlMcV);
   fChain->SetBranchAddress("mContamPairs.mCurvGl", &mContamPairs_mCurvGl, &b_mContamPairs_mCurvGl);
   fChain->SetBranchAddress("mContamPairs.mTanLGl", &mContamPairs_mTanLGl, &b_mContamPairs_mTanLGl);
   fChain->SetBranchAddress("mContamPairs.mErrG[5]", &mContamPairs_mErrG, &b_mContamPairs_mErrG);
   fChain->SetBranchAddress("mContamPairs.mPidPion", &mContamPairs_mPidPion, &b_mContamPairs_mPidPion);
   fChain->SetBranchAddress("mContamPairs.mPidProton", &mContamPairs_mPidProton, &b_mContamPairs_mPidProton);
   fChain->SetBranchAddress("mContamPairs.mPidKaon", &mContamPairs_mPidKaon, &b_mContamPairs_mPidKaon);
   fChain->SetBranchAddress("mContamPairs.mPidElectron", &mContamPairs_mPidElectron, &b_mContamPairs_mPidElectron);
   fChain->SetBranchAddress("mContamPairs.mFirstZ", &mContamPairs_mFirstZ, &b_mContamPairs_mFirstZ);
   fChain->SetBranchAddress("mContamPairs.mLastZ", &mContamPairs_mLastZ, &b_mContamPairs_mLastZ);
   fChain->SetBranchAddress("mContamPairs.mFirstPadrow", &mContamPairs_mFirstPadrow, &b_mContamPairs_mFirstPadrow);
   fChain->SetBranchAddress("mContamPairs.mLastPadrow", &mContamPairs_mLastPadrow, &b_mContamPairs_mLastPadrow);
   fChain->SetBranchAddress("mContamPairs.mFirstFitPadrow", &mContamPairs_mFirstFitPadrow, &b_mContamPairs_mFirstFitPadrow);
   fChain->SetBranchAddress("mContamPairs.mLastFitPadrow", &mContamPairs_mLastFitPadrow, &b_mContamPairs_mLastFitPadrow);
   fChain->SetBranchAddress("mContamPairs.mFirstSector", &mContamPairs_mFirstSector, &b_mContamPairs_mFirstSector);
   fChain->SetBranchAddress("mContamPairs.mLastSector", &mContamPairs_mLastSector, &b_mContamPairs_mLastSector);
   fChain->SetBranchAddress("mContamPairs.mRecoKey", &mContamPairs_mRecoKey, &b_mContamPairs_mRecoKey);
   fChain->SetBranchAddress("mContamPairs.mFitPts", &mContamPairs_mFitPts, &b_mContamPairs_mFitPts);
   fChain->SetBranchAddress("mContamPairs.mFitSvt", &mContamPairs_mFitSvt, &b_mContamPairs_mFitSvt);
   fChain->SetBranchAddress("mContamPairs.mFitSsd", &mContamPairs_mFitSsd, &b_mContamPairs_mFitSsd);
   fChain->SetBranchAddress("mContamPairs.mFitFtpc", &mContamPairs_mFitFtpc, &b_mContamPairs_mFitFtpc);
   fChain->SetBranchAddress("mContamPairs.mDedxPts", &mContamPairs_mDedxPts, &b_mContamPairs_mDedxPts);
   fChain->SetBranchAddress("mContamPairs.mAllPts", &mContamPairs_mAllPts, &b_mContamPairs_mAllPts);
   fChain->SetBranchAddress("mContamPairs.mCharge", &mContamPairs_mCharge, &b_mContamPairs_mCharge);
   fChain->SetBranchAddress("mContamPairs.mNAssocMc", &mContamPairs_mNAssocMc, &b_mContamPairs_mNAssocMc);
   fChain->SetBranchAddress("mContamPairs.mNPossible", &mContamPairs_mNPossible, &b_mContamPairs_mNPossible);
   fChain->SetBranchAddress("mContamPairs.mIsValidPr", &mContamPairs_mIsValidPr, &b_mContamPairs_mIsValidPr);
   fChain->SetBranchAddress("mContamPairs.mEmcTowerAdc[3]", &mContamPairs_mEmcTowerAdc, &b_mContamPairs_mEmcTowerAdc);
   fChain->SetBranchAddress("mContamPairs.mEmcEnergyRcHit[3]", &mContamPairs_mEmcEnergyRcHit, &b_mContamPairs_mEmcEnergyRcHit);
   fChain->SetBranchAddress("mContamPairs.mEmcSoftIdHiTowerRc[3]", &mContamPairs_mEmcSoftIdHiTowerRc, &b_mContamPairs_mEmcSoftIdHiTowerRc);
   fChain->SetBranchAddress("mMatGlobPairs_", &mMatGlobPairs_, &b_mMatGlobPairs_);
   fChain->SetBranchAddress("mMatGlobPairs.mNCommonHit", &mMatGlobPairs_mNCommonHit, &b_mMatGlobPairs_mNCommonHit);
   fChain->SetBranchAddress("mMatGlobPairs.mIsBestContam", &mMatGlobPairs_mIsBestContam, &b_mMatGlobPairs_mIsBestContam);
   fChain->SetBranchAddress("mMatGlobPairs.mDominatrack", &mMatGlobPairs_mDominatrack, &b_mMatGlobPairs_mDominatrack);
   fChain->SetBranchAddress("mMatGlobPairs.mDominCommonHit", &mMatGlobPairs_mDominCommonHit, &b_mMatGlobPairs_mDominCommonHit);
   fChain->SetBranchAddress("mMatGlobPairs.mAvgQuality", &mMatGlobPairs_mAvgQuality, &b_mMatGlobPairs_mAvgQuality);
   fChain->SetBranchAddress("mMatGlobPairs.mIsValid", &mMatGlobPairs_mIsValid, &b_mMatGlobPairs_mIsValid);
   fChain->SetBranchAddress("mMatGlobPairs.mPtMc", &mMatGlobPairs_mPtMc, &b_mMatGlobPairs_mPtMc);
   fChain->SetBranchAddress("mMatGlobPairs.mPzMc", &mMatGlobPairs_mPzMc, &b_mMatGlobPairs_mPzMc);
   fChain->SetBranchAddress("mMatGlobPairs.mEtaMc", &mMatGlobPairs_mEtaMc, &b_mMatGlobPairs_mEtaMc);
   fChain->SetBranchAddress("mMatGlobPairs.mPhiMc", &mMatGlobPairs_mPhiMc, &b_mMatGlobPairs_mPhiMc);
   fChain->SetBranchAddress("mMatGlobPairs.mNHitMc", &mMatGlobPairs_mNHitMc, &b_mMatGlobPairs_mNHitMc);
   fChain->SetBranchAddress("mMatGlobPairs.mNSvtHitMc", &mMatGlobPairs_mNSvtHitMc, &b_mMatGlobPairs_mNSvtHitMc);
   fChain->SetBranchAddress("mMatGlobPairs.mNSsdHitMc", &mMatGlobPairs_mNSsdHitMc, &b_mMatGlobPairs_mNSsdHitMc);
   fChain->SetBranchAddress("mMatGlobPairs.mNFtpcHitMc", &mMatGlobPairs_mNFtpcHitMc, &b_mMatGlobPairs_mNFtpcHitMc);
   fChain->SetBranchAddress("mMatGlobPairs.mNBemcHitMc", &mMatGlobPairs_mNBemcHitMc, &b_mMatGlobPairs_mNBemcHitMc);
   fChain->SetBranchAddress("mMatGlobPairs.mNBprsHitMc", &mMatGlobPairs_mNBprsHitMc, &b_mMatGlobPairs_mNBprsHitMc);
   fChain->SetBranchAddress("mMatGlobPairs.mNBsmdeHitMc", &mMatGlobPairs_mNBsmdeHitMc, &b_mMatGlobPairs_mNBsmdeHitMc);
   fChain->SetBranchAddress("mMatGlobPairs.mNBsmdpHitMc", &mMatGlobPairs_mNBsmdpHitMc, &b_mMatGlobPairs_mNBsmdpHitMc);
   fChain->SetBranchAddress("mMatGlobPairs.mNEemcHitMc", &mMatGlobPairs_mNEemcHitMc, &b_mMatGlobPairs_mNEemcHitMc);
   fChain->SetBranchAddress("mMatGlobPairs.mNEprsHitMc", &mMatGlobPairs_mNEprsHitMc, &b_mMatGlobPairs_mNEprsHitMc);
   fChain->SetBranchAddress("mMatGlobPairs.mNEsmduHitMc", &mMatGlobPairs_mNEsmduHitMc, &b_mMatGlobPairs_mNEsmduHitMc);
   fChain->SetBranchAddress("mMatGlobPairs.mNEsmdvHitMc", &mMatGlobPairs_mNEsmdvHitMc, &b_mMatGlobPairs_mNEsmdvHitMc);
   fChain->SetBranchAddress("mMatGlobPairs.mGeantId", &mMatGlobPairs_mGeantId, &b_mMatGlobPairs_mGeantId);
   fChain->SetBranchAddress("mMatGlobPairs.mChargeMc", &mMatGlobPairs_mChargeMc, &b_mMatGlobPairs_mChargeMc);
   fChain->SetBranchAddress("mMatGlobPairs.mStopR", &mMatGlobPairs_mStopR, &b_mMatGlobPairs_mStopR);
   fChain->SetBranchAddress("mMatGlobPairs.mKey", &mMatGlobPairs_mKey, &b_mMatGlobPairs_mKey);
   fChain->SetBranchAddress("mMatGlobPairs.mParentKey", &mMatGlobPairs_mParentKey, &b_mMatGlobPairs_mParentKey);
   fChain->SetBranchAddress("mMatGlobPairs.mParentGeantId", &mMatGlobPairs_mParentGeantId, &b_mMatGlobPairs_mParentGeantId);
   fChain->SetBranchAddress("mMatGlobPairs.mEmcEnergyMcHit[3]", &mMatGlobPairs_mEmcEnergyMcHit, &b_mMatGlobPairs_mEmcEnergyMcHit);
   fChain->SetBranchAddress("mMatGlobPairs.mEmcEnergyMcSum", &mMatGlobPairs_mEmcEnergyMcSum, &b_mMatGlobPairs_mEmcEnergyMcSum);
   fChain->SetBranchAddress("mMatGlobPairs.mEmcSoftIdHiTowerMc[3]", &mMatGlobPairs_mEmcSoftIdHiTowerMc, &b_mMatGlobPairs_mEmcSoftIdHiTowerMc);
   fChain->SetBranchAddress("mMatGlobPairs.mNAssocGl", &mMatGlobPairs_mNAssocGl, &b_mMatGlobPairs_mNAssocGl);
   fChain->SetBranchAddress("mMatGlobPairs.mNAssocPr", &mMatGlobPairs_mNAssocPr, &b_mMatGlobPairs_mNAssocPr);
   fChain->SetBranchAddress("mMatGlobPairs.mIsPrimary", &mMatGlobPairs_mIsPrimary, &b_mMatGlobPairs_mIsPrimary);
   fChain->SetBranchAddress("mMatGlobPairs.fUniqueID", &mMatGlobPairs_fUniqueID, &b_mMatGlobPairs_fUniqueID);
   fChain->SetBranchAddress("mMatGlobPairs.fBits", &mMatGlobPairs_fBits, &b_mMatGlobPairs_fBits);
   fChain->SetBranchAddress("mMatGlobPairs.mIsValidGl", &mMatGlobPairs_mIsValidGl, &b_mMatGlobPairs_mIsValidGl);
   fChain->SetBranchAddress("mMatGlobPairs.mPtPr", &mMatGlobPairs_mPtPr, &b_mMatGlobPairs_mPtPr);
   fChain->SetBranchAddress("mMatGlobPairs.mPzPr", &mMatGlobPairs_mPzPr, &b_mMatGlobPairs_mPzPr);
   fChain->SetBranchAddress("mMatGlobPairs.mEtaPr", &mMatGlobPairs_mEtaPr, &b_mMatGlobPairs_mEtaPr);
   fChain->SetBranchAddress("mMatGlobPairs.mPhiPr", &mMatGlobPairs_mPhiPr, &b_mMatGlobPairs_mPhiPr);
   fChain->SetBranchAddress("mMatGlobPairs.mDcaPr", &mMatGlobPairs_mDcaPr, &b_mMatGlobPairs_mDcaPr);
   fChain->SetBranchAddress("mMatGlobPairs.mDcaXYPr", &mMatGlobPairs_mDcaXYPr, &b_mMatGlobPairs_mDcaXYPr);
   fChain->SetBranchAddress("mMatGlobPairs.mDcaZPr", &mMatGlobPairs_mDcaZPr, &b_mMatGlobPairs_mDcaZPr);
   fChain->SetBranchAddress("mMatGlobPairs.mDcaXYPrMcV", &mMatGlobPairs_mDcaXYPrMcV, &b_mMatGlobPairs_mDcaXYPrMcV);
   fChain->SetBranchAddress("mMatGlobPairs.mDcaZPrMcV", &mMatGlobPairs_mDcaZPrMcV, &b_mMatGlobPairs_mDcaZPrMcV);
   fChain->SetBranchAddress("mMatGlobPairs.mCurvPr", &mMatGlobPairs_mCurvPr, &b_mMatGlobPairs_mCurvPr);
   fChain->SetBranchAddress("mMatGlobPairs.mTanLPr", &mMatGlobPairs_mTanLPr, &b_mMatGlobPairs_mTanLPr);
   fChain->SetBranchAddress("mMatGlobPairs.mErrP[5]", &mMatGlobPairs_mErrP, &b_mMatGlobPairs_mErrP);
   fChain->SetBranchAddress("mMatGlobPairs.mChi2Pr", &mMatGlobPairs_mChi2Pr, &b_mMatGlobPairs_mChi2Pr);
   fChain->SetBranchAddress("mMatGlobPairs.mFlag", &mMatGlobPairs_mFlag, &b_mMatGlobPairs_mFlag);
   fChain->SetBranchAddress("mMatGlobPairs.mDedx", &mMatGlobPairs_mDedx, &b_mMatGlobPairs_mDedx);
   fChain->SetBranchAddress("mMatGlobPairs.mPtGl", &mMatGlobPairs_mPtGl, &b_mMatGlobPairs_mPtGl);
   fChain->SetBranchAddress("mMatGlobPairs.mPzGl", &mMatGlobPairs_mPzGl, &b_mMatGlobPairs_mPzGl);
   fChain->SetBranchAddress("mMatGlobPairs.mEtaGl", &mMatGlobPairs_mEtaGl, &b_mMatGlobPairs_mEtaGl);
   fChain->SetBranchAddress("mMatGlobPairs.mPhiGl", &mMatGlobPairs_mPhiGl, &b_mMatGlobPairs_mPhiGl);
   fChain->SetBranchAddress("mMatGlobPairs.mDcaGl", &mMatGlobPairs_mDcaGl, &b_mMatGlobPairs_mDcaGl);
   fChain->SetBranchAddress("mMatGlobPairs.mDcaXYGl", &mMatGlobPairs_mDcaXYGl, &b_mMatGlobPairs_mDcaXYGl);
   fChain->SetBranchAddress("mMatGlobPairs.mDcaZGl", &mMatGlobPairs_mDcaZGl, &b_mMatGlobPairs_mDcaZGl);
   fChain->SetBranchAddress("mMatGlobPairs.mDcaXYGlMcV", &mMatGlobPairs_mDcaXYGlMcV, &b_mMatGlobPairs_mDcaXYGlMcV);
   fChain->SetBranchAddress("mMatGlobPairs.mDcaZGlMcV", &mMatGlobPairs_mDcaZGlMcV, &b_mMatGlobPairs_mDcaZGlMcV);
   fChain->SetBranchAddress("mMatGlobPairs.mCurvGl", &mMatGlobPairs_mCurvGl, &b_mMatGlobPairs_mCurvGl);
   fChain->SetBranchAddress("mMatGlobPairs.mTanLGl", &mMatGlobPairs_mTanLGl, &b_mMatGlobPairs_mTanLGl);
   fChain->SetBranchAddress("mMatGlobPairs.mErrG[5]", &mMatGlobPairs_mErrG, &b_mMatGlobPairs_mErrG);
   fChain->SetBranchAddress("mMatGlobPairs.mPidPion", &mMatGlobPairs_mPidPion, &b_mMatGlobPairs_mPidPion);
   fChain->SetBranchAddress("mMatGlobPairs.mPidProton", &mMatGlobPairs_mPidProton, &b_mMatGlobPairs_mPidProton);
   fChain->SetBranchAddress("mMatGlobPairs.mPidKaon", &mMatGlobPairs_mPidKaon, &b_mMatGlobPairs_mPidKaon);
   fChain->SetBranchAddress("mMatGlobPairs.mPidElectron", &mMatGlobPairs_mPidElectron, &b_mMatGlobPairs_mPidElectron);
   fChain->SetBranchAddress("mMatGlobPairs.mFirstZ", &mMatGlobPairs_mFirstZ, &b_mMatGlobPairs_mFirstZ);
   fChain->SetBranchAddress("mMatGlobPairs.mLastZ", &mMatGlobPairs_mLastZ, &b_mMatGlobPairs_mLastZ);
   fChain->SetBranchAddress("mMatGlobPairs.mFirstPadrow", &mMatGlobPairs_mFirstPadrow, &b_mMatGlobPairs_mFirstPadrow);
   fChain->SetBranchAddress("mMatGlobPairs.mLastPadrow", &mMatGlobPairs_mLastPadrow, &b_mMatGlobPairs_mLastPadrow);
   fChain->SetBranchAddress("mMatGlobPairs.mFirstFitPadrow", &mMatGlobPairs_mFirstFitPadrow, &b_mMatGlobPairs_mFirstFitPadrow);
   fChain->SetBranchAddress("mMatGlobPairs.mLastFitPadrow", &mMatGlobPairs_mLastFitPadrow, &b_mMatGlobPairs_mLastFitPadrow);
   fChain->SetBranchAddress("mMatGlobPairs.mFirstSector", &mMatGlobPairs_mFirstSector, &b_mMatGlobPairs_mFirstSector);
   fChain->SetBranchAddress("mMatGlobPairs.mLastSector", &mMatGlobPairs_mLastSector, &b_mMatGlobPairs_mLastSector);
   fChain->SetBranchAddress("mMatGlobPairs.mRecoKey", &mMatGlobPairs_mRecoKey, &b_mMatGlobPairs_mRecoKey);
   fChain->SetBranchAddress("mMatGlobPairs.mFitPts", &mMatGlobPairs_mFitPts, &b_mMatGlobPairs_mFitPts);
   fChain->SetBranchAddress("mMatGlobPairs.mFitSvt", &mMatGlobPairs_mFitSvt, &b_mMatGlobPairs_mFitSvt);
   fChain->SetBranchAddress("mMatGlobPairs.mFitSsd", &mMatGlobPairs_mFitSsd, &b_mMatGlobPairs_mFitSsd);
   fChain->SetBranchAddress("mMatGlobPairs.mFitFtpc", &mMatGlobPairs_mFitFtpc, &b_mMatGlobPairs_mFitFtpc);
   fChain->SetBranchAddress("mMatGlobPairs.mDedxPts", &mMatGlobPairs_mDedxPts, &b_mMatGlobPairs_mDedxPts);
   fChain->SetBranchAddress("mMatGlobPairs.mAllPts", &mMatGlobPairs_mAllPts, &b_mMatGlobPairs_mAllPts);
   fChain->SetBranchAddress("mMatGlobPairs.mCharge", &mMatGlobPairs_mCharge, &b_mMatGlobPairs_mCharge);
   fChain->SetBranchAddress("mMatGlobPairs.mNAssocMc", &mMatGlobPairs_mNAssocMc, &b_mMatGlobPairs_mNAssocMc);
   fChain->SetBranchAddress("mMatGlobPairs.mNPossible", &mMatGlobPairs_mNPossible, &b_mMatGlobPairs_mNPossible);
   fChain->SetBranchAddress("mMatGlobPairs.mIsValidPr", &mMatGlobPairs_mIsValidPr, &b_mMatGlobPairs_mIsValidPr);
   fChain->SetBranchAddress("mMatGlobPairs.mEmcTowerAdc[3]", &mMatGlobPairs_mEmcTowerAdc, &b_mMatGlobPairs_mEmcTowerAdc);
   fChain->SetBranchAddress("mMatGlobPairs.mEmcEnergyRcHit[3]", &mMatGlobPairs_mEmcEnergyRcHit, &b_mMatGlobPairs_mEmcEnergyRcHit);
   fChain->SetBranchAddress("mMatGlobPairs.mEmcSoftIdHiTowerRc[3]", &mMatGlobPairs_mEmcSoftIdHiTowerRc, &b_mMatGlobPairs_mEmcSoftIdHiTowerRc);
   fChain->SetBranchAddress("fUniqueID", &fUniqueID, &b_StMiniMcEvent_fUniqueID);
   fChain->SetBranchAddress("fBits", &fBits, &b_StMiniMcEvent_fBits);
   Notify();
}

Bool_t StMiniMcTree::Notify()
{
   // The Notify() function is called when a new file is opened. This
   // can be either for a new TTree in a TChain or when when a new TTree
   // is started when using PROOF. It is normally not necessary to make changes
   // to the generated code, but the routine can be extended by the
   // user if needed. The return value is currently not used.

   return kTRUE;
}

void StMiniMcTree::Show(Long64_t entry)
{
// Print contents of entry.
// If entry is not specified, print current entry
   if (!fChain) return;
   fChain->Show(entry);
}
Int_t StMiniMcTree::Cut(Long64_t entry)
{
// This function may be called from Loop.
// returns  1 if entry is accepted.
// returns -1 otherwise.
   return 1;
}
//#endif // #ifdef StMiniMcTree_cxx
